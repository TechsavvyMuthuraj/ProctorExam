{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Documents/Final%20Year%20Project/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Documents/Final%20Year%20Project/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Documents/Final%20Year%20Project/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Documents/Final%20Year%20Project/src/lib/data.ts"],"sourcesContent":["\nimport type { User, Candidate, Test, Submission, ProctoringLog } from './types';\nimport { PlaceHolderImages } from './placeholder-images';\n\nexport const users: User[] = [\n  { id: 'user-1', name: 'Admin', email: 'admin@proctor.com', role: 'admin', avatarUrl: '' },\n  { id: 'user-2', name: 'Eva Luator', email: 'eva@proctor.com', role: 'evaluator', avatarUrl: '' },\n];\n\nexport const candidates: Candidate[] = [\n  { id: 'cand-1', name: 'Alice Johnson', email: 'alice@example.com', avatarUrl: '' },\n  { id: 'cand-2', name: 'Bob Williams', email: 'bob@example.com', avatarUrl: '' },\n  { id: 'cand-3', name: 'Charlie Brown', email: 'charlie@example.com', avatarUrl: '' },\n];\n\nexport const tests: Test[] = [\n  {\n    id: 'test-1',\n    title: 'Frontend Developer Assessment',\n    description: 'A comprehensive test for frontend development skills.',\n    category: 'Technical',\n    timeLimit: 60,\n    createdBy: 'user-1',\n    createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n    assignedCandidateIds: ['cand-1', 'cand-2'],\n    accessCode: 'FRONT123',\n    passingScore: 20,\n    evaluationMode: 'manual',\n    questions: [\n      { id: 'q1', testId: 'test-1', type: 'mcq', category: 'technical', questionText: 'What is React?', options: ['A library', 'A framework', 'A language'], answer: 'A library', marks: 10 },\n      { id: 'q2', testId: 'test-1', type: 'puzzle', category: 'technical', questionText: 'Write a function to reverse a string.', answer: 'function reverse(str) {\\n  return str.split(\"\").reverse().join(\"\");\\n}', language: 'javascript', marks: 20 },\n    ],\n  },\n  {\n    id: 'test-2',\n    title: 'Backend Engineering Challenge',\n    description: 'Evaluate backend engineering principles and coding.',\n    category: 'Technical',\n    timeLimit: 90,\n    createdBy: 'user-1',\n    createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),\n    assignedCandidateIds: ['cand-3'],\n    accessCode: 'BACK456',\n    passingScore: 40,\n    evaluationMode: 'manual',\n    questions: [\n      { id: 'q3', testId: 'test-2', type: 'paragraph', category: 'technical', questionText: 'Explain the difference between SQL and NoSQL databases.', answer: 'SQL databases are relational, use structured query language and have a predefined schema. NoSQL databases are non-relational, have dynamic schemas for unstructured data.', marks: 25 },\n      { id: 'q4', testId: 'test-2', type: 'puzzle', category: 'technical', questionText: 'Implement a REST API endpoint for user creation.', language: 'javascript', marks: 35 },\n    ],\n  },\n  {\n    id: 'mcq-test-3',\n    title: 'General Knowledge Quiz',\n    description: 'A quick quiz to test general knowledge.',\n    category: 'General',\n    timeLimit: 15,\n    createdBy: 'user-1',\n    createdAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),\n    assignedCandidateIds: ['cand-1', 'cand-2', 'cand-3'],\n    accessCode: 'QUIZ101',\n    passingScore: 20,\n    evaluationMode: 'automatic',\n    questions: [\n        { id: 'q5', testId: 'mcq-test-3', type: 'mcq', category: 'general', questionText: 'What is the capital of France?', options: ['Berlin', 'Madrid', 'Paris', 'Rome'], answer: 'Paris', marks: 10 },\n        { id: 'q6', testId: 'mcq-test-3', type: 'mcq', category: 'logical', questionText: 'Which planet is known as the Red Planet?', options: ['Earth', 'Mars', 'Jupiter', 'Venus'], answer: 'Mars', marks: 10 },\n        { id: 'q7', testId: 'mcq-test-3', type: 'mcq', category: 'aptitude', questionText: 'What is the largest ocean on Earth?', options: ['Atlantic', 'Indian', 'Arctic', 'Pacific'], answer: 'Pacific', marks: 10 },\n    ],\n  }\n];\n\nexport const submissions: Submission[] = [\n  { id: 'sub-1', testId: 'test-1', candidateId: 'cand-1', answers: { q1: 'A library', q2: 'function reverse(s){ return s.split(\"\").reverse().join(\"\"); }' }, score: 28, status: 'completed', submittedAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(), result: 'fail' },\n  { id: 'sub-2', testId: 'test-1', candidateId: 'cand-2', answers: { q1: 'A framework', q2: '...' }, score: null, status: 'evaluating', submittedAt: new Date().toISOString() },\n  { id: 'sub-3', testId: 'test-2', candidateId: 'cand-3', answers: { q3: '...', q4: '...' }, score: null, status: 'evaluating', submittedAt: new Date().toISOString() },\n];\n\nexport const proctoringLogs: ProctoringLog[] = [\n  // Logs for Charlie Brown's test (cand-3, test-2)\n  { id: 'log-1', testId: 'test-2', candidateId: 'cand-3', timestamp: new Date(Date.now() - 80 * 60 * 1000).toISOString(), status: 'present' },\n  { id: 'log-2', testId: 'test-2', candidateId: 'cand-3', timestamp: new Date(Date.now() - 75 * 60 * 1000).toISOString(), status: 'present' },\n  { id: 'log-3', testId: 'test-2', candidateId: 'cand-3', timestamp: new Date(Date.now() - 70 * 60 * 1000).toISOString(), status: 'no_face' },\n  { id: 'log-4', testId: 'test-2', candidateId: 'cand-3', timestamp: new Date(Date.now() - 69 * 60 * 1000).toISOString(), status: 'no_face' },\n  { id: 'log-5', testId: 'test-2', candidateId: 'cand-3', timestamp: new Date(Date.now() - 68 * 60 * 1000).toISOString(), status: 'present' },\n  { id: 'log-6', testId: 'test-2', candidateId: 'cand-3', timestamp: new Date(Date.now() - 50 * 60 * 1000).toISOString(), status: 'multiple_faces' },\n  { id: 'log-7', testId: 'test-2', candidateId: 'cand-3', timestamp: new Date(Date.now() - 49 * 60 * 1000).toISOString(), status: 'present' },\n  { id: 'log-8', testId: 'test-2', candidateId: 'cand-3', timestamp: new Date(Date.now() - 30 * 60 * 1000).toISOString(), status: 'no_face' },\n  { id: 'log-9', testId: 'test-2', candidateId: 'cand-3', timestamp: new Date(Date.now() - 10 * 60 * 1000).toISOString(), status: 'present' },\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Documents/Final%20Year%20Project/src/lib/store.ts"],"sourcesContent":["\n\n'use client';\n\nimport { create } from 'zustand';\nimport type { Test, Submission, Question, Candidate, ProctoringLog } from './types';\nimport { tests as initialTests, submissions as initialSubmissions, candidates as initialCandidates } from './data';\nimport { isFirebaseEnabled, db } from './firebase';\nimport { doc, updateDoc, arrayUnion, writeBatch, collection, deleteDoc, getDocs, setDoc } from 'firebase/firestore';\n\n\ntype TestsState = {\n  tests: Test[];\n  setTests: (tests: Test[]) => void;\n  addTest: (test: Test) => Promise<void>;\n  updateTest: (test: Partial<Test>) => Promise<void>;\n  deleteTest: (testId: string) => void;\n  deleteQuestion: (questionId: string, testId: string) => void;\n  assignCandidates: (testId: string, candidateIds: string[]) => Promise<void>;\n  updateQuestion: (updatedQuestion: Partial<Question> & { id: string; testId: string }) => void;\n};\n\nexport const useTestsStore = create<TestsState>((set, get) => ({\n  tests: initialTests,\n  setTests: (tests) => set({ tests }),\n  addTest: async (test) => {\n    if (isFirebaseEnabled) {\n      try {\n        const batch = writeBatch(db);\n        const testRef = doc(db, 'tests', test.id);\n        const { questions, ...testData } = test;\n        \n        batch.set(testRef, {\n            ...testData,\n            assignedCandidateIds: testData.assignedCandidateIds || [] \n        });\n\n        test.questions.forEach(question => {\n          const questionRef = doc(collection(testRef, 'questions'), question.id);\n          batch.set(questionRef, { ...question, testId: test.id });\n        });\n\n        await batch.commit();\n      } catch (error) {\n        console.error(\"Error adding test to Firestore:\", error);\n      }\n    } else {\n        set((state) => ({ tests: [...state.tests, test] }));\n    }\n  },\n  updateTest: async (test) => {\n    if (isFirebaseEnabled && test.id) {\n        try {\n            const testRef = doc(db, 'tests', test.id);\n            const { questions, ...testData } = test;\n            await updateDoc(testRef, testData as any);\n        } catch (error) {\n            console.error(\"Error updating test in Firestore:\", error);\n        }\n    }\n    set(state => ({\n        tests: state.tests.map(t => t.id === test.id ? { ...t, ...test } as Test : t)\n    }));\n  },\n  deleteTest: async (testId) => {\n    if (isFirebaseEnabled) {\n      try {\n        const questionsRef = collection(db, 'tests', testId, 'questions');\n        const questionsSnap = await getDocs(questionsRef);\n        const batch = writeBatch(db);\n        questionsSnap.forEach(doc => batch.delete(doc.ref));\n        await batch.commit();\n\n        await deleteDoc(doc(db, 'tests', testId));\n      } catch (error) {\n        console.error(\"Error deleting test from Firestore:\", error);\n      }\n    } else {\n       set((state) => ({ tests: state.tests.filter(test => test.id !== testId) }));\n    }\n  },\n  deleteQuestion: async (questionId, testId) => {\n    if (isFirebaseEnabled) {\n      try {\n        await deleteDoc(doc(db, 'tests', testId, 'questions', questionId));\n      } catch (error) {\n        console.error(\"Error deleting question from Firestore:\", error);\n      }\n    } else {\n        set((state) => ({\n        tests: state.tests.map(test => {\n            if(test.id !== testId) return test;\n            return {\n                ...test,\n                questions: test.questions.filter(q => q.id !== questionId),\n            }\n        })\n        }));\n    }\n  },\n  assignCandidates: async (testId, candidateIds) => {\n    if (isFirebaseEnabled) {\n        try {\n            const testRef = doc(db, 'tests', testId);\n            await updateDoc(testRef, {\n                assignedCandidateIds: arrayUnion(...candidateIds)\n            });\n        } catch (error) {\n            console.error(\"Error assigning candidates in Firestore:\", error);\n        }\n    } else {\n        set((state) => ({\n            tests: state.tests.map(test => \n            test.id === testId \n                ? { ...test, assignedCandidateIds: Array.from(new Set([...(test.assignedCandidateIds || []), ...candidateIds])) }\n                : test\n            )\n        }));\n    }\n  },\n  updateQuestion: async (updatedQuestion) => {\n    if (isFirebaseEnabled) {\n        try {\n            const questionRef = doc(db, 'tests', updatedQuestion.testId, 'questions', updatedQuestion.id);\n            await updateDoc(questionRef, updatedQuestion as any);\n        } catch(error) {\n             console.error(\"Error updating question in Firestore:\", error);\n        }\n    }\n    else {\n        set((state) => ({\n        tests: state.tests.map(test => {\n            if (test.id !== updatedQuestion.testId) return test;\n            return {\n                ...test,\n                questions: test.questions.map(q => q.id === updatedQuestion.id ? {...q, ...updatedQuestion} : q),\n            }\n        })\n        }));\n    }\n  },\n}));\n\n\ntype SubmissionsState = {\n    submissions: Submission[];\n    setSubmissions: (submissions: Submission[]) => void;\n    fetchAllSubmissions: () => Promise<void>;\n    addSubmission: (submission: Omit<Submission, 'result'>, proctoringLogs: Omit<ProctoringLog, 'id'>[], test: Test, timeTaken: number) => Promise<void>;\n    updateSubmission: (submissionId: string, data: Partial<Submission>) => void;\n    deleteSubmission: (submissionId: string) => Promise<void>;\n}\n\nexport const useSubmissionsStore = create<SubmissionsState>((set, get) => ({\n    submissions: initialSubmissions,\n    setSubmissions: (submissions) => set({ submissions }),\n    fetchAllSubmissions: async () => {\n        if (isFirebaseEnabled) {\n            try {\n                const querySnapshot = await getDocs(collection(db, \"submissions\"));\n                const submissions = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as Submission));\n                set({ submissions });\n            } catch (error) {\n                console.error(\"Error fetching all submissions from Firestore:\", error);\n            }\n        }\n    },\n    addSubmission: async (submission, proctoringLogs, test, timeTaken) => {\n      let finalSubmission: Submission = { ...submission, timeTaken };\n\n      const isAutoGradable = test.questions.every(q => q.type === 'mcq' || q.type === 'image-mcq' || q.type === 'video-mcq');\n      if (test.evaluationMode === 'automatic' && isAutoGradable) {\n          let score = 0;\n          test.questions.forEach(q => {\n              if ((q.type === 'mcq' || q.type === 'image-mcq' || q.type === 'video-mcq') && finalSubmission.answers[q.id] === q.answer) {\n                  score += (q.marks || 0);\n              }\n          });\n          \n          finalSubmission.score = score;\n          finalSubmission.status = 'completed';\n          finalSubmission.result = score >= test.passingScore ? 'pass' : 'fail';\n      }\n\n      if (isFirebaseEnabled) {\n        try {\n          const batch = writeBatch(db);\n          \n          const submissionRef = doc(db, 'submissions', finalSubmission.id);\n          batch.set(submissionRef, finalSubmission);\n          \n          proctoringLogs.forEach(log => {\n              const logId = `log-${Date.now()}-${Math.random().toString(16).slice(2)}`;\n              const logRef = doc(db, 'proctoringLogs', logId);\n              batch.set(logRef, { ...log, id: logId });\n          });\n\n          await batch.commit();\n\n        } catch (error) {\n          console.error(\"Error adding submission and logs to Firestore:\", error);\n        }\n      }\n      set((state) => ({ submissions: [...state.submissions, finalSubmission] }))\n    },\n    updateSubmission: async (submissionId, data) => {\n        if(isFirebaseEnabled) {\n            try {\n                await updateDoc(doc(db, 'submissions', submissionId), data);\n            } catch (error) {\n                console.error(\"Error updating submission in Firestore:\", error);\n            }\n        }\n        set((state) => ({\n            submissions: state.submissions.map(s => \n                s.id === submissionId ? { ...s, ...data } : s\n            )\n        }))\n    },\n    deleteSubmission: async (submissionId) => {\n        if (isFirebaseEnabled) {\n            try {\n                await deleteDoc(doc(db, 'submissions', submissionId));\n            } catch (error) {\n                console.error(\"Error deleting submission:\", error);\n            }\n        }\n        set(state => ({ submissions: state.submissions.filter(s => s.id !== submissionId) }));\n    },\n}));\n\n\ntype CandidatesState = {\n  candidates: Candidate[];\n  setCandidates: (candidates: Candidate[]) => void;\n  addCandidate: (candidate: Candidate) => void;\n  removeCandidate: (candidateId: string) => Promise<void>;\n};\n\nexport const useCandidatesStore = create<CandidatesState>((set) => ({\n  candidates: initialCandidates,\n  setCandidates: (candidates) => set({ candidates }),\n  addCandidate: (candidate) => {\n    if (isFirebaseEnabled) {\n        // This should be handled by auth/firestore triggers in a real app,\n        // but for client-side, we add it directly if needed.\n        // `signInAsCandidate` in login page handles the primary creation.\n    } else {\n        set((state) => ({ candidates: [...state.candidates, candidate] }));\n    }\n  },\n  removeCandidate: async (candidateId) => {\n    if (isFirebaseEnabled) {\n      try {\n        await deleteDoc(doc(db, \"candidates\", candidateId));\n      } catch (error) {\n        console.error(\"Error deleting candidate:\", error);\n      }\n    } else {\n       set((state) => ({ candidates: state.candidates.filter(c => c.id !== candidateId) }))\n    }\n  },\n}));\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 798, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Documents/Final%20Year%20Project/src/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;;AAGb,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;;AAGb,eAAe,WAAW,GAAG,qKAAA,CAAA,WAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 862, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Documents/Final%20Year%20Project/src/app/%28auth%29/login/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, Suspense, useRef } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { FileText, LogIn, User, Mail, Shield, UserCheck, KeyRound, CheckCircle, ArrowRight, ArrowLeft, Camera, Phone } from 'lucide-react';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { useCandidatesStore } from '@/lib/store';\nimport { useToast } from '@/hooks/use-toast';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth, db, isFirebaseEnabled, signInAsCandidate } from '@/lib/firebase';\nimport { collection, setDoc, doc, query, where, getDocs, limit } from 'firebase/firestore';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\n\nfunction LoginPageContent() {\n    const router = useRouter();\n    const searchParams = useSearchParams();\n    const { toast } = useToast();\n    const { addCandidate, candidates: localCandidates } = useCandidatesStore();\n    \n    const isPortalLogin = searchParams.get('portal') === 'true';\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [mobileNumber, setMobileNumber] = useState('');\n    \n    const [candidateLoading, setCandidateLoading] = useState(false);\n    const [registrationSuccess, setRegistrationSuccess] = useState(false);\n\n    const [adminEmail, setAdminEmail] = useState('');\n    const [adminPassword, setAdminPassword] = useState('');\n    const [adminLoading, setAdminLoading] = useState(false);\n\n    const [evaluatorEmail, setEvaluatorEmail] = useState('');\n    const [evaluatorPassword, setEvaluatorPassword] = useState('');\n    const [evaluatorLoading, setEvaluatorLoading] = useState(false);\n\n\n    const handleAdminLogin = async () => {\n        if (!adminEmail || !adminPassword) {\n            toast({ variant: 'destructive', title: 'Missing fields', description: 'Please enter both email and password.'});\n            return;\n        }\n        setAdminLoading(true);\n        if (!isFirebaseEnabled) {\n             toast({ title: 'Welcome back!' });\n             router.push('/dashboard');\n             return;\n        }\n        try {\n            await signInWithEmailAndPassword(auth, adminEmail, adminPassword);\n            toast({ title: 'Welcome back!' });\n            router.push('/dashboard');\n        } catch (error: any) {\n            console.error('Admin login error:', error);\n            let description = 'An unexpected error occurred.';\n            if (error.code === 'auth/invalid-credential' || error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password') {\n                description = 'Invalid email or password. Please check your credentials or create an account in the Firebase console.';\n            } else {\n                description = error.message;\n            }\n            toast({\n                variant: 'destructive',\n                title: 'Login Failed',\n                description: description\n            });\n        } finally {\n            setAdminLoading(false);\n        }\n    }\n\n    const handleEvaluatorLogin = async () => {\n        if (!evaluatorEmail || !evaluatorPassword) {\n            toast({ variant: 'destructive', title: 'Missing fields', description: 'Please enter both email and password.'});\n            return;\n        }\n        setEvaluatorLoading(true);\n        if (!isFirebaseEnabled) {\n            toast({ title: 'Welcome back!' });\n            router.push('/evaluator');\n            return;\n        }\n        try {\n            await signInWithEmailAndPassword(auth, evaluatorEmail, evaluatorPassword);\n            toast({ title: 'Welcome back!' });\n            router.push('/evaluator');\n        } catch (error: any) {\n            console.error('Evaluator login error:', error);\n             let description = 'An unexpected error occurred.';\n            if (error.code === 'auth/invalid-credential' || error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password') {\n                description = 'Invalid email or password. Please check your credentials or create an account in the Firebase console.';\n            } else {\n                description = error.message;\n            }\n            toast({\n                variant: 'destructive',\n                title: 'Login Failed',\n                description: description\n            });\n        } finally {\n            setEvaluatorLoading(false);\n        }\n    }\n\n    const handleCandidateRegistration = async () => {\n        if (!name || !email) {\n            toast({\n                variant: 'destructive',\n                title: 'Missing Information',\n                description: 'Please fill in your name and email.'\n            });\n            return;\n        }\n        \n        setCandidateLoading(true);\n\n        try {\n            const avatarUrl = ''; // Use fallback icon instead of a generated image\n\n            if (isFirebaseEnabled) {\n                 const candidatesRef = collection(db, \"candidates\");\n                 const q = query(candidatesRef, where(\"email\", \"==\", email.toLowerCase()), limit(1));\n                 const querySnapshot = await getDocs(q);\n\n                 if (!querySnapshot.empty) {\n                     toast({\n                         variant: 'destructive',\n                         title: 'Already Registered',\n                         description: 'This email address is already registered. Please proceed to take a test.'\n                     });\n                     setCandidateLoading(false);\n                     return;\n                 }\n\n                const user = await signInAsCandidate();\n                if (!user) throw new Error(\"Could not create anonymous user.\");\n\n                const candidateRef = doc(db, \"candidates\", user.uid);\n                await setDoc(candidateRef, {\n                    id: user.uid,\n                    name,\n                    email,\n                    avatarUrl,\n                    mobileNumber,\n                }, { merge: true });\n\n            } else {\n                const existingCandidate = localCandidates.find(c => c.email.toLowerCase() === email.toLowerCase());\n                if (existingCandidate) {\n                     toast({\n                         variant: 'destructive',\n                         title: 'Already Registered',\n                         description: 'This email address is already registered. Please proceed to take a test.'\n                     });\n                     setCandidateLoading(false);\n                     return;\n                }\n                const newCandidateId = `cand-${Date.now()}`;\n                const candidate = {\n                    id: newCandidateId,\n                    name,\n                    email,\n                    avatarUrl,\n                    mobileNumber,\n                };\n                addCandidate(candidate);\n            }\n\n            setRegistrationSuccess(true);\n\n        } catch (error: any) {\n             console.error('Candidate registration error:', error);\n            toast({\n                variant: 'destructive',\n                title: 'Registration Failed',\n                description: error.message || 'An unexpected error occurred.'\n            });\n        } finally {\n            setCandidateLoading(false);\n        }\n    }\n    \n    const glassmorphismClass = \"bg-card/60 dark:bg-card/40 backdrop-blur-lg border border-border/20\";\n\n\n    if (isPortalLogin) {\n        return (\n            <Card className={`w-full max-w-md ${glassmorphismClass}`}>\n                 <CardHeader className=\"text-center\">\n                    <div className=\"mb-4 flex justify-center\">\n                        <div className=\"flex h-16 w-16 items-center justify-center rounded-full bg-primary/10 overflow-hidden\">\n                            <Shield className=\"h-8 w-8 text-primary\" />\n                        </div>\n                    </div>\n                    <CardTitle className=\"text-2xl\">ProctorExam Lite Portal</CardTitle>\n                    <CardDescription>\n                    Admin & Evaluator Login\n                    </CardDescription>\n                </CardHeader>\n                <CardContent>\n                    <Tabs defaultValue=\"admin\" className=\"w-full\">\n                        <TabsList className=\"grid w-full grid-cols-2\">\n                            <TabsTrigger value=\"admin\"><Shield className=\"mr-2 h-4 w-4\" />Admin</TabsTrigger>\n                            <TabsTrigger value=\"evaluator\"><UserCheck className=\"mr-2 h-4 w-4\" />Evaluator</TabsTrigger>\n                        </TabsList>\n                        <TabsContent value=\"admin\" className=\"space-y-4 pt-4\">\n                            <div className=\"space-y-2\">\n                                <Label htmlFor=\"admin-email\">Admin Email</Label>\n                                <div className=\"relative\">\n                                    <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                    <Input \n                                        id=\"admin-email\"\n                                        type=\"email\"\n                                        value={adminEmail}\n                                        onChange={(e) => setAdminEmail(e.target.value)}\n                                        placeholder=\"admin@proctor.com\"\n                                        className=\"pl-9\"\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"space-y-2\">\n                                <Label htmlFor=\"admin-password\">Password</Label>\n                                <div className=\"relative\">\n                                    <KeyRound className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                    <Input \n                                        id=\"admin-password\"\n                                        type=\"password\"\n                                        value={adminPassword}\n                                        onChange={(e) => setAdminPassword(e.target.value)}\n                                        placeholder=\"••••••••\"\n                                        className=\"pl-9\"\n                                    />\n                                </div>\n                            </div>\n                            <Button onClick={handleAdminLogin} className=\"w-full\" disabled={adminLoading}>\n                                <LogIn className=\"mr-2\" />\n                                {adminLoading ? 'Logging in...' : 'Login as Admin'}\n                            </Button>\n                        </TabsContent>\n                        <TabsContent value=\"evaluator\" className=\"space-y-4 pt-4\">\n                            <div className=\"space-y-2\">\n                                <Label htmlFor=\"evaluator-email\">Evaluator Email</Label>\n                                <div className=\"relative\">\n                                    <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                    <Input \n                                        id=\"evaluator-email\"\n                                        type=\"email\"\n                                        value={evaluatorEmail}\n                                        onChange={(e) => setEvaluatorEmail(e.target.value)}\n                                        placeholder=\"evaluator@proctor.com\"\n                                        className=\"pl-9\"\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"space-y-2\">\n                                <Label htmlFor=\"evaluator-password\">Password</Label>\n                                <div className=\"relative\">\n                                    <KeyRound className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                    <Input \n                                        id=\"evaluator-password\"\n                                        type=\"password\"\n                                        value={evaluatorPassword}\n                                        onChange={(e) => setEvaluatorPassword(e.target.value)}\n                                        placeholder=\"••••••••\"\n                                        className=\"pl-9\"\n                                    />\n                                </div>\n                            </div>\n                            <Button onClick={handleEvaluatorLogin} className=\"w-full\" disabled={evaluatorLoading}>\n                                <LogIn className=\"mr-2\" />\n                                {evaluatorLoading ? 'Logging in...' : 'Login as Evaluator'}\n                            </Button>\n                        </TabsContent>\n                    </Tabs>\n                </CardContent>\n            </Card>\n        )\n    }\n\n  return (\n        <Card className={`w-full max-w-lg ${glassmorphismClass}`}>\n            <CardHeader className=\"text-center\">\n                 <div className=\"mb-4 flex justify-center\">\n                    <div className=\"flex h-16 w-16 items-center justify-center rounded-full bg-primary/10 overflow-hidden\">\n                        <FileText className=\"h-8 w-8 text-primary\" />\n                    </div>\n                </div>\n                <CardTitle>Candidate Registration</CardTitle>\n                <CardDescription>First time here? Register with your details to get started.</CardDescription>\n            </CardHeader>\n            <CardContent>\n                {registrationSuccess ? (\n                    <div className=\"text-center space-y-4 animate-in fade-in-50\">\n                        <CheckCircle className=\"h-16 w-16 text-green-500 mx-auto\" />\n                        <h3 className=\"text-xl font-semibold\">Registration Successful!</h3>\n                        <p className=\"text-muted-foreground\">You can now proceed to take a test using an access code.</p>\n                        <div className=\"flex flex-col gap-2\">\n                            <Button asChild className=\"w-full\">\n                               <Link href=\"/test/access\">\n                                 Proceed to Test <ArrowRight className=\"ml-2\" />\n                               </Link>\n                            </Button>\n                             <Button variant=\"outline\" onClick={() => setRegistrationSuccess(false)}>\n                                <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                                Back to Registration\n                            </Button>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"space-y-4\">\n                         <div className=\"flex flex-col items-center space-y-4\">\n                            <Avatar className=\"h-24 w-24\">\n                                <AvatarFallback>\n                                    <User className=\"h-12 w-12 text-muted-foreground\" />\n                                </AvatarFallback>\n                            </Avatar>\n                        </div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                             <div className=\"space-y-2\">\n                                <Label htmlFor=\"name\">Full Name</Label>\n                                <div className=\"relative\">\n                                    <User className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                    <Input \n                                    id=\"name\"\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                    placeholder=\"e.g., John Doe\"\n                                    className=\"pl-9\"\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"space-y-2\">\n                                <Label htmlFor=\"email\">Email</Label>\n                                <div className=\"relative\">\n                                    <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                    <Input \n                                    id=\"email\"\n                                    type=\"email\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                    placeholder=\"e.g., john.doe@example.com\"\n                                    className=\"pl-9\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                         <div className=\"space-y-2\">\n                            <Label htmlFor=\"mobile\">Mobile Number</Label>\n                            <div className=\"relative\">\n                                <Phone className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                <Input \n                                id=\"mobile\"\n                                type=\"tel\"\n                                value={mobileNumber}\n                                onChange={(e) => setMobileNumber(e.target.value)}\n                                placeholder=\"e.g., +1 234 567 890\"\n                                className=\"pl-9\"\n                                />\n                            </div>\n                        </div>\n\n                        <Button onClick={handleCandidateRegistration} className=\"w-full\" disabled={candidateLoading || !name || !email}>\n                            <LogIn className=\"mr-2\" />\n                            {candidateLoading ? 'Registering...' : 'Register'}\n                        </Button>\n                         <p className=\"text-center text-sm text-muted-foreground pt-2\">\n                            Already registered? <Link href=\"/test/access\" className='font-medium text-primary hover:underline'>Take a test</Link>.\n                        </p>\n                    </div>\n                )}\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default function LoginPage() {\n    return (\n        <Suspense fallback={<div>Loading...</div>}>\n            <LoginPageContent />\n        </Suspense>\n    )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}