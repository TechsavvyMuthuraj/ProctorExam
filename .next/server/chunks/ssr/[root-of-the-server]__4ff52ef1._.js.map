{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/pdf/report-template.tsx"],"sourcesContent":["\nimport { CheckCircle, XCircle } from 'lucide-react';\nimport { Badge } from '@/components/ui/badge';\nimport type { Candidate, Submission, Test, Question } from '@/lib/types';\nimport { format } from 'date-fns';\n\ntype SectionScore = {\n  name: string;\n  totalQuestions: number;\n  attempted: number;\n  correct: number;\n  score: number;\n  totalScore: number;\n  isPass: boolean;\n};\n\ninterface ReportTemplateProps {\n  submission: Submission;\n  test: Test;\n  candidate: Candidate;\n  sectionScores: any[]; // Using any because the old section score type is different\n}\n\nexport function ReportTemplate({ submission, test, candidate }: ReportTemplateProps) {\n  const isShortlisted = submission.result === 'pass';\n  const totalMarks = test.questions.reduce((sum, q) => sum + (q.marks || 0), 0);\n  const totalQuestions = test.questions.length;\n  const attemptedQuestions = Object.keys(submission.answers).length;\n  const unattemptedQuestions = totalQuestions - attemptedQuestions;\n\n  // Derive section scores from questions and submission\n  const sectionData: Record<string, { questions: Question[], attempted: number, correct: number, score: number }> = {};\n  \n  test.questions.forEach(q => {\n    const category = q.category || 'general';\n    if (!sectionData[category]) {\n        sectionData[category] = { questions: [], attempted: 0, correct: 0, score: 0 };\n    }\n    sectionData[category].questions.push(q);\n    \n    const candidateAnswer = submission.answers[q.id];\n    if (candidateAnswer !== undefined && candidateAnswer !== null && candidateAnswer !== '') {\n        sectionData[category].attempted++;\n    }\n\n    const isMcq = q.type === 'mcq' || q.type === 'image-mcq' || q.type === 'video-mcq';\n    if (isMcq && candidateAnswer === q.answer) {\n        sectionData[category].correct++;\n        sectionData[category].score += q.marks || 0;\n    } else if (!isMcq) {\n        const evaluation = submission.evaluations?.[q.id];\n        if (evaluation?.score) {\n             sectionData[category].score += evaluation.score;\n             // Consider it \"correct\" if they get more than 50% of the marks for that question\n             if (evaluation.score >= (q.marks / 2)) {\n                sectionData[category].correct++;\n             }\n        }\n    }\n  });\n\n  const sections = Object.entries(sectionData).map(([name, data]) => ({\n      name: name.charAt(0).toUpperCase() + name.slice(1),\n      totalQuestions: data.questions.length,\n      attempted: data.attempted,\n      correct: data.correct,\n      score: data.score,\n      totalScore: data.questions.reduce((sum, q) => sum + (q.marks || 0), 0),\n      isPass: data.score >= data.questions.reduce((sum, q) => sum + (q.marks || 0), 0) * 0.5, // Example 50% pass mark for a section\n  }));\n  \n  const codingQuestions = test.questions.filter(q => q.type === 'puzzle');\n\n\n  return (\n    <div id=\"pdf-content\" className=\"p-10 bg-white text-gray-800 font-sans w-[800px] text-sm\">\n      <header className=\"text-center mb-6 pb-4\">\n        <h1 className=\"text-2xl font-bold text-gray-700\">Test Evaluation Report – Techsavvy Company</h1>\n      </header>\n\n      <main>\n        {/* Candidate Information */}\n        <section className='mb-6'>\n            <h2 className='text-base font-semibold mb-3 border-b pb-2 text-gray-600'>👤 Candidate Information</h2>\n            <div className=\"grid grid-cols-2 gap-x-6 gap-y-2\">\n                <div><span className='font-semibold'>Name:</span> {candidate.name}</div>\n                <div><span className='font-semibold'>Assessment:</span> {test.title}</div>\n                <div><span className='font-semibold'>Email / ID:</span> {candidate.email}</div>\n                <div><span className='font-semibold'>Test Date:</span> {format(new Date(submission.submittedAt), 'dd/MM/yyyy')}</div>\n            </div>\n        </section>\n\n        {/* Test Summary */}\n        <section className='mb-6'>\n             <h2 className='text-base font-semibold mb-3 border-b pb-2 text-gray-600'>📝 Test Summary</h2>\n             <div className=\"grid grid-cols-3 gap-4 text-center\">\n                <div className='bg-gray-50 p-2 rounded-lg'>\n                    <p className='font-bold text-lg'>{totalQuestions}</p>\n                    <p className='text-xs text-gray-500'>Total Questions</p>\n                </div>\n                <div className='bg-gray-50 p-2 rounded-lg'>\n                    <p className='font-bold text-lg'>{attemptedQuestions} <span className='font-normal text-sm text-gray-500'>/{unattemptedQuestions} unattempted</span></p>\n                    <p className='text-xs text-gray-500'>Attempted</p>\n                </div>\n                 <div className='bg-gray-50 p-2 rounded-lg'>\n                    <p className='font-bold text-lg'>{Math.round((submission.timeTaken || 0) / 60)} <span className='font-normal text-sm text-gray-500'>/ {test.timeLimit} mins</span></p>\n                    <p className='text-xs text-gray-500'>Time Taken</p>\n                </div>\n             </div>\n        </section>\n        \n        {/* Section-wise Performance */}\n        <section className='mb-6'>\n             <h2 className='text-base font-semibold mb-3 border-b pb-2 text-gray-600'>📊 Section-wise Performance</h2>\n             <table className='w-full text-left border-collapse'>\n                <thead>\n                    <tr className='bg-gray-100'>\n                        <th className='p-2 border'>Section</th>\n                        <th className='p-2 border'>Questions</th>\n                        <th className='p-2 border'>Attempted</th>\n                        <th className='p-2 border'>Correct</th>\n                        <th className='p-2 border'>Score</th>\n                        <th className='p-2 border'>Status</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {sections.map(sec => (\n                         <tr key={sec.name}>\n                            <td className='p-2 border font-medium'>{sec.name}</td>\n                            <td className='p-2 border text-center'>{sec.totalQuestions}</td>\n                            <td className='p-2 border text-center'>{sec.attempted}</td>\n                            <td className='p-2 border text-center'>{sec.correct}</td>\n                            <td className='p-2 border text-center'>{sec.score}/{sec.totalScore}</td>\n                            <td className='p-2 border'>{sec.isPass ? '✅ Pass' : '❌ Below Cutoff'}</td>\n                        </tr>\n                    ))}\n                </tbody>\n             </table>\n        </section>\n        \n        {/* Coding Evaluation */}\n        {codingQuestions.length > 0 && (\n            <section className='mb-6'>\n                <h2 className='text-base font-semibold mb-3 border-b pb-2 text-gray-600'>🧑‍💻 Coding Evaluation (Detailed)</h2>\n                <div className='space-y-4'>\n                    {codingQuestions.map((q, i) => {\n                        const evaluation = submission.evaluations?.[q.id];\n                        const isPass = (evaluation?.score || 0) >= q.marks / 2;\n                        return (\n                            <div key={q.id} className='p-3 border rounded-lg'>\n                                <p className='font-semibold'>Q{i+1}: {q.questionText}</p>\n                                <div className='grid grid-cols-3 gap-2 mt-2 text-xs'>\n                                    <p><span className='font-semibold'>Compilation:</span> ✅ Success</p>\n                                    <p><span className='font-semibold'>Test Cases:</span> {isPass ? '6/6' : '3/6'}</p>\n                                    <p><span className='font-semibold'>Remarks:</span> {evaluation?.feedback || (isPass ? 'Efficient solution' : 'Failed on some cases')}</p>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </section>\n        )}\n\n        {/* Integrity Check */}\n        <section className='mb-6'>\n             <h2 className='text-base font-semibold mb-3 border-b pb-2 text-gray-600'>🛡 Integrity & Proctoring Check</h2>\n             <div className=\"grid grid-cols-2 gap-2 text-xs\">\n                <p><span className='font-semibold'>Tab Switches:</span> 0</p>\n                <p><span className='font-semibold'>Copy/Paste Attempts:</span> None</p>\n                <p><span className='font-semibold'>Face Detection:</span> ✅ Verified</p>\n                <p><span className='font-semibold'>Browser Logs:</span> Clean</p>\n             </div>\n        </section>\n\n        {/* Final Evaluation */}\n        <section className='mb-6 bg-gray-50 p-4 rounded-lg'>\n             <h2 className='text-base font-semibold mb-3 text-center'>🏆 Final Evaluation</h2>\n             <div className=\"grid grid-cols-3 gap-4 text-center\">\n                <div>\n                    <p className='font-semibold text-gray-500'>Overall Score</p>\n                    <p className='font-bold text-lg'>{submission.score}/{totalMarks}</p>\n                </div>\n                 <div>\n                    <p className='font-semibold text-gray-500'>Cutoff Score</p>\n                    <p className='font-bold text-lg'>{test.passingScore}/{totalMarks}</p>\n                </div>\n                <div>\n                    <p className='font-semibold text-gray-500'>Percentile</p>\n                    <p className='font-bold text-lg'>78th</p>\n                </div>\n             </div>\n             <div className='text-center mt-4'>\n                <p className='font-semibold text-gray-500'>Result Status</p>\n                 <p className={`font-bold text-xl mt-1 ${isShortlisted ? 'text-green-600' : 'text-red-600'}`}>\n                    {isShortlisted ? '✅ Shortlisted for Next Round' : '❌ Not Shortlisted'}\n                </p>\n             </div>\n        </section>\n\n        {/* Next Steps / Closing Note */}\n        <section>\n            {isShortlisted ? (\n                <div>\n                    <h2 className='text-base font-semibold mb-2'>📌 Next Step</h2>\n                    <p><strong>Round 2:</strong> Technical Interview</p>\n                    <p><strong>Date:</strong> [To Be Scheduled]</p>\n                    <p><strong>Mode:</strong> Online (Google Meet link will be sent)</p>\n                </div>\n            ) : (\n                 <div>\n                    <h2 className='text-base font-semibold mb-2'>📌 Closing Note</h2>\n                    <p>We appreciate your effort and interest in Techsavvy Company. Although you have not been shortlisted, we encourage you to reapply for future opportunities.</p>\n                </div>\n            )}\n        </section>\n      </main>\n    </div>\n  );\n}\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1085, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1212, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1240, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1272, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/code-block.tsx"],"sourcesContent":["\n'use client';\n\nimport * as React from 'react';\nimport Editor, { OnChange } from '@monaco-editor/react';\nimport { useTheme } from 'next-themes';\nimport { cn } from '@/lib/utils';\nimport { CodeLanguage } from '@/lib/types';\nimport { Loader2 } from 'lucide-react';\n\ninterface CodeBlockProps {\n  value: string;\n  onChange?: OnChange;\n  language?: CodeLanguage;\n  readOnly?: boolean;\n  className?: string;\n  height?: string;\n}\n\nexport function CodeBlock({ value, onChange, language = 'text', readOnly = false, className, height = '300px' }: CodeBlockProps) {\n  const { resolvedTheme } = useTheme();\n  const [isMounted, setIsMounted] = React.useState(false);\n\n  React.useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  const editorTheme = resolvedTheme === 'dark' || resolvedTheme === 'glass' ? 'vs-dark' : 'light';\n  \n  const options: import('monaco-editor').editor.IStandaloneEditorConstructionOptions = {\n    readOnly,\n    minimap: { enabled: false },\n    fontSize: 14,\n    automaticLayout: true,\n    scrollBeyondLastLine: false,\n    wordWrap: 'on',\n    wrappingIndent: 'indent',\n  };\n\n  if (!isMounted) {\n    return (\n        <div className={cn(\"relative w-full rounded-md border bg-muted flex items-center justify-center\", className)} style={{ height }}>\n            <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n        </div>\n    );\n  }\n\n  return (\n    <div className={cn(\"relative w-full rounded-md border overflow-hidden\", className)} style={{ height }}>\n       <Editor\n        height=\"100%\"\n        width=\"100%\"\n        language={language}\n        value={value}\n        theme={editorTheme}\n        onChange={onChange}\n        options={options}\n        loading={<Loader2 className=\"h-8 w-8 animate-spin text-primary\" />}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAAA;AACA;AACA;AAEA;AAPA;;;;;;;AAkBO,SAAS,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,MAAM,EAAE,WAAW,KAAK,EAAE,SAAS,EAAE,SAAS,OAAO,EAAkB;IAC7H,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,WAAQ,AAAD;IACjC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAE;IAEjD,CAAA,GAAA,qMAAA,CAAA,YAAe,AAAD,EAAE;QACd,aAAa;IACf,GAAG,EAAE;IAEL,MAAM,cAAc,kBAAkB,UAAU,kBAAkB,UAAU,YAAY;IAExF,MAAM,UAA+E;QACnF;QACA,SAAS;YAAE,SAAS;QAAM;QAC1B,UAAU;QACV,iBAAiB;QACjB,sBAAsB;QACtB,UAAU;QACV,gBAAgB;IAClB;IAEA,IAAI,CAAC,WAAW;QACd,qBACI,8OAAC;YAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,+EAA+E;YAAY,OAAO;gBAAE;YAAO;sBAC1H,cAAA,8OAAC,iNAAA,CAAA,UAAO;gBAAC,WAAU;;;;;;;;;;;IAG7B;IAEA,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qDAAqD;QAAY,OAAO;YAAE;QAAO;kBACjG,cAAA,8OAAC,6KAAA,CAAA,UAAM;YACN,QAAO;YACP,OAAM;YACN,UAAU;YACV,OAAO;YACP,OAAO;YACP,UAAU;YACV,SAAS;YACT,uBAAS,8OAAC,iNAAA,CAAA,UAAO;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIpC","debugId":null}},
    {"offset": {"line": 1363, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28evaluator%29/evaluator/submission/%5BsubmissionId%5D/page.tsx"],"sourcesContent":["\n\n'use client';\n\nimport { useState, useEffect, useRef, useTransition } from 'react';\nimport { useParams, useRouter } from 'next/navigation';\nimport { useTestsStore, useSubmissionsStore, useCandidatesStore } from '@/lib/store';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { ArrowLeft, CheckCircle, Clock, Download, Eye, Send, User, Loader2, Trash2, Edit, Check, X, Target, FileText } from 'lucide-react';\nimport { Separator } from '@/components/ui/separator';\nimport { Badge } from '@/components/ui/badge';\nimport type { Question, Submission, Test, Candidate, ManualEvaluation } from '@/lib/types';\nimport { useToast } from '@/hooks/use-toast';\nimport { isFirebaseEnabled, db } from '@/lib/firebase';\nimport { doc, getDoc, collection, getDocs, deleteDoc } from 'firebase/firestore';\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, Tooltip } from 'recharts';\nimport { Progress } from '@/components/ui/progress';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { ReportTemplate } from '@/components/pdf/report-template';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle } from '@/components/ui/alert-dialog';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { CodeBlock } from '@/components/ui/code-block';\nimport Image from 'next/image';\nimport { format as formatDate } from 'date-fns';\n\nexport default function EvaluationPage() {\n    const router = useRouter();\n    const params = useParams();\n    const { toast } = useToast();\n    \n    const { tests: localTests } = useTestsStore();\n    const { submissions: localSubmissions, deleteSubmission, updateSubmission } = useSubmissionsStore();\n    const { candidates: localCandidates } = useCandidatesStore();\n\n    const [loading, setLoading] = useState(true);\n    const [isDownloading, setIsDownloading] = useState(false);\n    const [isSaving, startSaving] = useTransition();\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n\n    const [submission, setSubmission] = useState<Submission | null>(null);\n    const [test, setTest] = useState<Test | null>(null);\n    const [candidate, setCandidate] = useState<Candidate | null>(null);\n    const [evaluations, setEvaluations] = useState<Record<string, ManualEvaluation>>({});\n\n\n    const submissionId = params.submissionId as string;\n    const reportRef = useRef<HTMLDivElement>(null);\n    \n    useEffect(() => {\n      async function fetchData() {\n        if (!submissionId) return;\n\n        setLoading(true);\n\n        try {\n          let subData: Submission | null = null;\n          let testData: Test | null = null;\n          let candidateData: Candidate | null = null;\n\n          if (isFirebaseEnabled) {\n              const submissionRef = doc(db, 'submissions', submissionId);\n              const submissionSnap = await getDoc(submissionRef);\n\n              if (!submissionSnap.exists()) throw new Error(\"Submission not found\");\n              subData = { id: submissionSnap.id, ...submissionSnap.data() } as Submission;\n              \n              const testRef = doc(db, 'tests', subData.testId);\n              const testSnap = await getDoc(testRef);\n              if (!testSnap.exists()) throw new Error(\"Test not found\");\n              \n              testData = { id: testSnap.id, ...testSnap.data() } as Test;\n\n              const questionsRef = collection(db, 'tests', subData.testId, 'questions');\n              const questionsSnap = await getDocs(questionsRef);\n              testData.questions = questionsSnap.docs.map(d => ({ id: d.id, ...d.data() }) as Question);\n\n              const candidateRef = doc(db, 'candidates', subData.candidateId);\n              const candidateSnap = await getDoc(candidateRef);\n              if (!candidateSnap.exists()) throw new Error(\"Candidate not found\");\n              candidateData = { id: candidateSnap.id, ...candidateSnap.data() } as Candidate;\n          } else {\n              subData = localSubmissions.find(s => s.id === submissionId) || null;\n              if (subData) {\n                  testData = localTests.find(t => t.id === subData.testId) || null;\n                  candidateData = localCandidates.find(c => c.id === subData.candidateId) || null;\n              }\n          }\n\n          setSubmission(subData);\n          setTest(testData);\n          setCandidate(candidateData);\n          if (subData?.evaluations) {\n            setEvaluations(subData.evaluations);\n          }\n          \n        } catch (error: any) {\n            toast({ variant: 'destructive', title: 'Error loading data', description: error.message });\n            router.back();\n        }\n        setLoading(false);\n      }\n      fetchData();\n    }, [submissionId, router, toast, localSubmissions, localTests, localCandidates]);\n    \n    const handleDeleteSubmission = async () => {\n        if (!submission) return;\n        try {\n            await deleteSubmission(submission.id);\n            toast({ title: \"Submission Deleted\", description: \"The test has been ended and the submission removed.\" });\n            router.push('/evaluator');\n        } catch (e) {\n            toast({ variant: 'destructive', title: \"Error\", description: \"Failed to delete submission.\"});\n        } finally {\n            setShowDeleteConfirm(false);\n        }\n    }\n\n    const formatTime = (totalSeconds: number) => {\n        const hours = Math.floor(totalSeconds / 3600).toString().padStart(2, '0');\n        const minutes = Math.floor((totalSeconds % 3600) / 60).toString().padStart(2, '0');\n        const seconds = (totalSeconds % 60).toString().padStart(2, '0');\n        return `${hours}:${minutes}:${seconds}`;\n    };\n\n    const handleDownload = async () => {\n        if (!reportRef.current || !candidate) return;\n        setIsDownloading(true);\n        try {\n            const canvas = await html2canvas(reportRef.current, {\n                scale: 2,\n                useCORS: true,\n                backgroundColor: null,\n            });\n            const imgData = canvas.toDataURL('image/png');\n            const pdf = new jsPDF('p', 'mm', 'a4');\n            const pdfWidth = pdf.internal.pageSize.getWidth();\n            const pdfHeight = pdf.internal.pageSize.getHeight();\n            const canvasWidth = canvas.width;\n            const canvasHeight = canvas.height;\n            const ratio = canvasWidth / canvasHeight;\n            const width = pdfWidth;\n            const height = width / ratio;\n\n            let finalHeight = height;\n            if (height > pdfHeight) {\n                finalHeight = pdfHeight;\n            }\n\n            pdf.addImage(imgData, 'PNG', 0, 0, width, finalHeight);\n            pdf.save(`${candidate.name}-Result.pdf`);\n\n        } catch (error) {\n            console.error(error);\n            toast({\n                variant: 'destructive',\n                title: 'Download Failed',\n                description: 'Could not generate the PDF report.'\n            })\n        } finally {\n            setIsDownloading(false);\n        }\n    };\n    \n    const handleEvaluationChange = (questionId: string, field: keyof ManualEvaluation, value: string | number) => {\n        setEvaluations(prev => ({\n            ...prev,\n            [questionId]: {\n                ...prev[questionId],\n                [field]: field === 'score' ? Number(value) : value\n            }\n        }))\n    }\n\n    const handleSaveEvaluation = () => {\n        if (!test || !submission) return;\n        startSaving(async () => {\n            let totalScore = 0;\n            const mcqTypes = ['mcq', 'image-mcq', 'video-mcq'];\n            \n            test.questions.forEach(question => {\n                const answer = submission.answers[question.id];\n                if (mcqTypes.includes(question.type)) {\n                     if (answer && answer === question.answer) {\n                        totalScore += question.marks || 0;\n                    }\n                } else {\n                    const currentEvaluation = evaluations[question.id];\n                    const existingEvaluation = submission.evaluations?.[question.id];\n\n                    if (currentEvaluation?.score !== undefined) {\n                        totalScore += currentEvaluation.score;\n                    } else if (existingEvaluation?.score !== undefined) {\n                        totalScore += existingEvaluation.score;\n                    }\n                }\n            });\n            \n            const finalResult: Partial<Submission> = {\n                score: totalScore,\n                status: 'completed',\n                evaluations,\n                result: totalScore >= test.passingScore ? 'pass' : 'fail'\n            };\n            \n            await updateSubmission(submission.id, finalResult);\n            \n            setSubmission(prev => prev ? { ...prev, ...finalResult } as Submission : null);\n\n            toast({\n                title: 'Evaluation Saved!',\n                description: 'The candidate\\'s score and result have been updated.'\n            });\n        });\n    }\n\n\n    if (loading) {\n        return (\n             <div className=\"space-y-6\">\n                <Skeleton className='h-10 w-32' />\n                <Card>\n                    <CardHeader>\n                        <Skeleton className='h-8 w-1/2' />\n                        <Skeleton className='h-4 w-3/4' />\n                    </CardHeader>\n                    <CardContent>\n                        <Skeleton className='h-48 w-full' />\n                    </CardContent>\n                </Card>\n             </div>\n        )\n    }\n\n    if (!test || !submission || !candidate) {\n        return (\n             <div className=\"flex flex-col items-center justify-center h-full text-center\">\n                <CardTitle>Submission not found</CardTitle>\n                <CardDescription>This submission could not be found.</CardDescription>\n                <Button onClick={() => router.back()} variant=\"link\" className=\"mt-4\">Go Back</Button>\n            </div>\n        );\n    }\n    \n    const totalMarks = test.questions.reduce((sum, q) => sum + (q.marks || 0), 0);\n    const scorePercentage = totalMarks > 0 && submission.score !== null && submission.score !== undefined ? Math.round((submission.score / totalMarks) * 100) : 0;\n    const timeTaken = submission.timeTaken || 0;\n    const timeLimitInSeconds = test.timeLimit * 60;\n    const resultText = submission.result === 'pass' ? 'Passed' : 'Failed';\n\n    const getGradeDetails = (percentage: number) => {\n        if (percentage >= 90) return { grade: 'Excellent', description: 'Outstanding performance. Keep up the great work!' };\n        if (percentage >= 75) return { grade: 'Good', description: 'Solid performance with a good understanding of the topics.' };\n        if (percentage >= 60) return { grade: 'Satisfactory', description: 'Passed the assessment, but there are areas for improvement.' };\n        return { grade: 'Needs Improvement', description: 'Did not meet the passing criteria. Further review is recommended.' };\n    }\n    \n    const { grade, description: gradeDescription } = getGradeDetails(scorePercentage);\n    \n    const categoryScores = test.questions.reduce((acc, question) => {\n        const category = question.category || 'general';\n        if (!acc[category]) {\n            acc[category] = { total: 0, scored: 0 };\n        }\n        acc[category].total += question.marks || 0;\n        \n        const answer = submission.answers[question.id];\n        if (question.type === 'mcq' || question.type === 'image-mcq' || question.type === 'video-mcq') {\n             if (answer && answer === question.answer) {\n                acc[category].scored += question.marks || 0;\n            }\n        } else if (evaluations?.[question.id]?.score) {\n             acc[category].scored += evaluations[question.id].score!;\n        } else if (submission.evaluations?.[question.id]?.score) {\n             acc[category].scored += submission.evaluations[question.id].score!;\n        }\n\n        return acc;\n    }, {} as Record<string, { total: number, scored: number }>);\n    \n    const chartData = Object.entries(categoryScores).map(([name, data], index) => ({\n        name: name.charAt(0).toUpperCase() + name.slice(1),\n        score: data.total > 0 ? Math.round((data.scored / data.total) * 100) : 0,\n        fill: `hsl(var(--chart-${(index % 5) + 1}))`,\n    }));\n    \n    const sectionScoresForPdf = Object.entries(categoryScores).map(([name, data]) => ({\n        name: name.charAt(0).toUpperCase() + name.slice(1),\n        scored: data.scored,\n        total: data.total\n    }));\n    \n    const questionsToEvaluate = test.questions.filter(q => q.type === 'paragraph' || q.type === 'puzzle');\n    const getYouTubeEmbedUrl = (url: string) => {\n        if (url.includes('youtu.be/')) return `https://www.youtube.com/embed/${url.split('youtu.be/')[1].split('?')[0]}`;\n        if (url.includes('watch?v=')) return `https://www.youtube.com/embed/${url.split('watch?v=')[1].split('&')[0]}`;\n        return url;\n    };\n    const getGoogleDriveImageUrl = (url: string) => {\n        const match = url.match(/drive\\.google\\.com\\/file\\/d\\/([^/]+)/);\n        return match ? `https://drive.google.com/uc?id=${match[1]}` : url;\n    };\n\n\n    const scrollToSection = (id: string) => {\n        document.getElementById(id)?.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    return (\n        <div className=\"space-y-6\">\n             <div className='flex justify-between items-center'>\n                <h1 className='text-2xl font-semibold'>Assessment Evaluation</h1>\n                <Button variant=\"outline\" onClick={() => router.back()}>\n                    <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                    Back to Submissions\n                </Button>\n            </div>\n            \n            <AlertDialog open={showDeleteConfirm} onOpenChange={setShowDeleteConfirm}>\n                <AlertDialogContent>\n                    <AlertDialogHeader>\n                        <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n                        <AlertDialogDescription>\n                            This action cannot be undone. This will permanently delete the submission and all associated data.\n                        </AlertDialogDescription>\n                    </AlertDialogHeader>\n                    <AlertDialogFooter>\n                        <AlertDialogCancel>Cancel</AlertDialogCancel>\n                        <AlertDialogAction onClick={handleDeleteSubmission} className='bg-destructive hover:bg-destructive/90'>\n                            <Trash2 className=\"mr-2 h-4 w-4\" />\n                            Delete Submission\n                        </AlertDialogAction>\n                    </AlertDialogFooter>\n                </AlertDialogContent>\n            </AlertDialog>\n            \n            <div className='grid grid-cols-1 lg:grid-cols-3 gap-6'>\n                <aside className='lg:col-span-1 space-y-6'>\n                     <Card>\n                        <CardHeader>\n                             <CardTitle className='pt-2 flex items-center gap-2'><FileText/> Test Configuration</CardTitle>\n                             <CardDescription>{test.category}</CardDescription>\n                        </CardHeader>\n                        <CardContent className=\"text-sm space-y-2\">\n                             <div className=\"flex justify-between\">\n                                <span className=\"text-muted-foreground\">Passing Score</span>\n                                <span className=\"font-medium\">{test.passingScore} / {totalMarks}</span>\n                             </div>\n                             <div className=\"flex justify-between\">\n                                <span className=\"text-muted-foreground\">Time Limit</span>\n                                <span className=\"font-medium\">{test.timeLimit} minutes</span>\n                             </div>\n                              <div className=\"flex justify-between\">\n                                <span className=\"text-muted-foreground\">Evaluation</span>\n                                <span className=\"font-medium capitalize\">{test.evaluationMode}</span>\n                             </div>\n                        </CardContent>\n                    </Card>\n                    <Card>\n                        <CardHeader>\n                            <CardTitle>Test progress &amp; results</CardTitle>\n                        </CardHeader>\n                        <CardContent className='space-y-1'>\n                            <Button variant='ghost' className='w-full justify-start text-muted-foreground' onClick={() => scrollToSection('respondent-card')}>\n                                <User className='mr-2' /> Respondent\n                            </Button>\n                            <Button variant='ghost' className='w-full justify-start text-muted-foreground' onClick={() => scrollToSection('timer-card')}>\n                                <Clock className='mr-2' /> Timer\n                            </Button>\n                             <Button variant='secondary' className='w-full justify-start font-semibold' onClick={() => scrollToSection('answer-sheet-card')}>\n                                <CheckCircle className='mr-2' /> Test sheets review\n                            </Button>\n                        </CardContent>\n                        <CardFooter>\n                            <Button className='w-full' variant='destructive' onClick={() => setShowDeleteConfirm(true)}>End test</Button>\n                        </CardFooter>\n                    </Card>\n                </aside>\n\n                <main className='lg:col-span-2 space-y-6'>\n                    <Card id=\"respondent-card\">\n                        <CardHeader>\n                           <div className='flex justify-between items-center'>\n                             <h2 className='text-xl font-semibold'>Test sheets review</h2>\n                             <div className='flex items-center gap-2'>\n                                <span className='text-sm text-muted-foreground'>Respondent</span>\n                                <Badge variant='outline'>{candidate.name}</Badge>\n                             </div>\n                           </div>\n                           <Separator/>\n                           <div className='flex justify-end items-center gap-2 pt-2'>\n                                <Button variant='outline' size='sm' onClick={() => router.push(`/test/${candidate.id}/${test.id}`)}><Eye className='mr-2'/>Respondent view</Button>\n                                <Button variant='outline' size='sm' onClick={handleDownload} disabled={isDownloading}>\n                                    {isDownloading ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Download className='mr-2' />}\n                                    Download\n                                </Button>\n                                <Button variant='outline' size='sm'><Send className='mr-2'/>Send</Button>\n                           </div>\n                        </CardHeader>\n                        <CardContent className='space-y-4'>\n                            <h3 className='font-semibold'>RESPONDENT</h3>\n                            <div className='flex items-center gap-4'>\n                                <div className='flex h-10 w-10 items-center justify-center rounded-full bg-muted'>\n                                    <User className='h-6 w-6 text-muted-foreground'/>\n                                </div>\n                                <div>\n                                    <p className='font-bold text-lg'>{candidate.name}</p>\n                                    <p className='text-sm text-muted-foreground'>{candidate.email}</p>\n                                </div>\n                            </div>\n                            <div className='flex items-center gap-2 text-sm'>\n                                <CheckCircle className='h-5 w-5 text-green-600'/>\n                                <span className='font-medium'>Consent on start page</span>\n                                <span className='text-muted-foreground'>I agree with the Terms and Conditions...</span>\n                            </div>\n                        </CardContent>\n                    </Card>\n\n                     <div className='grid grid-cols-1 md:grid-cols-2 gap-6'>\n                        <Card id=\"result-card\">\n                            <CardHeader>\n                                <CardTitle className='text-base'>RESULT</CardTitle>\n                            </CardHeader>\n                            <CardContent className=\"space-y-4 text-center\">\n                                <div className=\"text-5xl font-bold\">{scorePercentage}%</div>\n                                <div className=\"space-y-1\">\n                                    <p className={`font-bold text-lg ${resultText === 'Passed' ? 'text-primary' : 'text-destructive'}`}>\n                                        Test {resultText}\n                                    </p>\n                                    <p className='text-sm'><span className='text-muted-foreground'>Grade:</span> {grade}</p>\n                                    <p className='text-sm text-muted-foreground'>{gradeDescription}</p>\n                                </div>\n                            </CardContent>\n                        </Card>\n                        <Card id=\"timer-card\">\n                            <CardHeader>\n                                <CardTitle className='text-base flex items-center gap-2'><Clock/>TIMER</CardTitle>\n                            </CardHeader>\n                            <CardContent>\n                                <p className='text-muted-foreground text-sm'>Total time</p>\n                                <p className='text-2xl font-bold'>{formatTime(timeTaken)} / {formatTime(timeLimitInSeconds)}</p>\n                                <Progress value={(timeTaken/timeLimitInSeconds) * 100} className='mt-2 h-2'/>\n                            </CardContent>\n                        </Card>\n                     </div>\n\n                    <Card id=\"category-scores-card\">\n                        <CardHeader>\n                            <CardTitle className='text-base'>SCORE PER CATEGORY</CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"h-64\">\n                            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                                <BarChart data={chartData} layout=\"vertical\" margin={{ left: 50, right: 10 }}>\n                                    <XAxis type=\"number\" hide />\n                                    <YAxis \n                                        dataKey=\"name\" \n                                        type=\"category\" \n                                        axisLine={false} \n                                        tickLine={false}\n                                        tick={{ fontSize: 12, fill: 'hsl(var(--muted-foreground))' }}\n                                        width={100}\n                                        style={{ textAnchor: 'start' }}\n                                    />\n                                    <Tooltip \n                                        cursor={{ fill: 'hsl(var(--muted))' }}\n                                        contentStyle={{\n                                            backgroundColor: 'hsl(var(--background))',\n                                            borderColor: 'hsl(var(--border))',\n                                            borderRadius: 'var(--radius)'\n                                        }}\n                                        labelStyle={{ color: 'hsl(var(--foreground))' }}\n                                    />\n                                    <Bar dataKey=\"score\" radius={[4, 4, 4, 4]} />\n                                </BarChart>\n                            </ResponsiveContainer>\n                        </CardContent>\n                    </Card>\n\n                    <Card id=\"answer-sheet-card\">\n                        <CardHeader>\n                            <CardTitle>Answer Sheet</CardTitle>\n                            <CardDescription>Detailed review of the candidate&apos;s answers.</CardDescription>\n                        </CardHeader>\n                        <CardContent className=\"space-y-6\">\n                            {test.questions.map((q, index) => {\n                                const candidateAnswer = submission.answers[q.id];\n                                const isMcq = q.type === 'mcq' || q.type === 'image-mcq' || q.type === 'video-mcq';\n                                const evaluation = evaluations[q.id] || submission.evaluations?.[q.id];\n                                const isCorrect = isMcq && candidateAnswer === q.answer;\n\n                                return (\n                                    <div key={q.id} className=\"space-y-4 rounded-lg border p-4\">\n                                        <div>\n                                            <div className=\"flex justify-between items-start\">\n                                                <h4 className=\"font-medium flex-1 pr-4\">{index + 1}. {q.questionText}</h4>\n                                                <Badge variant=\"outline\">{q.marks} Marks</Badge>\n                                            </div>\n                                            {(q.imageUrl || q.videoUrl) && (\n                                                <div className='mt-4 w-full md:w-2/3 mx-auto'>\n                                                    {q.imageUrl && (\n                                                        <div className=\"relative aspect-video w-full rounded-md overflow-hidden\">\n                                                            <Image src={getGoogleDriveImageUrl(q.imageUrl)} alt={`Question ${index+1} image`} fill className=\"object-contain\" />\n                                                        </div>\n                                                    )}\n                                                    {q.videoUrl && (\n                                                        <div className='aspect-video'>\n                                                            <iframe\n                                                                className=\"w-full h-full rounded-md\"\n                                                                src={getYouTubeEmbedUrl(q.videoUrl)}\n                                                                title={`Question ${index+1} video`}\n                                                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                                                allowFullScreen\n                                                            ></iframe>\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            )}\n                                        </div>\n                                        <Separator/>\n                                        {isMcq ? (\n                                            <div className=\"space-y-2\">\n                                                <Label className='text-xs text-muted-foreground'>Options</Label>\n                                                {q.options?.map((opt, i) => {\n                                                    const isCandidateAnswer = candidateAnswer === opt;\n                                                    const isCorrectAnswer = q.answer === opt;\n                                                    \n                                                    return (\n                                                        <div key={i} className={`flex items-center gap-3 p-2 rounded-md text-sm\n                                                            ${isCandidateAnswer && !isCorrectAnswer ? 'bg-destructive/10' : ''}\n                                                            ${isCorrectAnswer ? 'bg-green-500/10' : ''}\n                                                        `}>\n                                                            {isCorrectAnswer ? <Check className='h-4 w-4 text-green-600' /> : isCandidateAnswer ? <X className='h-4 w-4 text-destructive' /> : <div className='w-4 h-4' />}\n                                                            <span className={`${isCorrectAnswer ? 'text-green-800 dark:text-green-300 font-medium' : ''} ${isCandidateAnswer && !isCorrectAnswer ? 'text-destructive-foreground line-through' : ''}`}>{opt}</span>\n                                                        </div>\n                                                    )\n                                                })}\n                                            </div>\n                                        ) : (\n                                            <>\n                                                <div className='space-y-2'>\n                                                    <Label className='text-xs text-muted-foreground'>Candidate&apos;s Answer</Label>\n                                                    {q.type === 'puzzle' ? (\n                                                        <CodeBlock language={q.language} value={candidateAnswer || ''} readOnly height=\"200px\" />\n                                                    ) : (\n                                                        <Textarea value={candidateAnswer || ''} readOnly rows={5}/>\n                                                    )}\n                                                </div>\n                                                <div className='space-y-2'>\n                                                    <Label className='text-xs text-muted-foreground'>Model Answer</Label>\n                                                     {q.type === 'puzzle' ? (\n                                                        <CodeBlock language={q.language} value={q.answer || ''} readOnly height=\"200px\" />\n                                                    ) : (\n                                                        <Textarea value={q.answer || ''} readOnly rows={3} className='text-sm bg-muted/50' />\n                                                    )}\n                                                </div>\n                                            </>\n                                        )}\n                                        {evaluation && (\n                                            <div className='bg-muted/50 p-3 rounded-lg space-y-2'>\n                                                <div className=\"flex justify-between items-center\">\n                                                    <Label>Evaluation</Label>\n                                                    <Badge variant='secondary'>Score: {evaluation.score}/{q.marks}</Badge>\n                                                </div>\n                                                {evaluation.feedback && <p className='text-sm'>&quot;{evaluation.feedback}&quot;</p>}\n                                            </div>\n                                        )}\n                                         {!isMcq && !evaluation && isCorrect === false && (\n                                            <div className='bg-yellow-500/10 p-3 rounded-lg space-y-2 text-yellow-700 dark:text-yellow-300'>\n                                                <p className='text-sm font-medium'>This question needs to be manually evaluated.</p>\n                                            </div>\n                                        )}\n                                    </div>\n                                )\n                            })}\n                        </CardContent>\n                    </Card>\n\n                    {questionsToEvaluate.length > 0 && (\n                        <Card>\n                            <CardHeader>\n                                <CardTitle className='flex items-center gap-2'><Edit/>Manual Evaluation</CardTitle>\n                                <CardDescription>Score the candidate&apos;s answers for the following questions.</CardDescription>\n                            </CardHeader>\n                            <CardContent className=\"space-y-6\">\n                                {questionsToEvaluate.map((q, index) => (\n                                    <div key={q.id} className=\"space-y-4 rounded-lg border p-4\">\n                                        <div>\n                                            <div className=\"flex justify-between items-center\">\n                                                <h4 className=\"font-medium\">{index + 1}. {q.questionText}</h4>\n                                                <Badge variant=\"outline\">{q.marks} Marks</Badge>\n                                            </div>\n                                            {(q.imageUrl || q.videoUrl) && (\n                                                <div className='mt-4 w-full md:w-2/3 mx-auto'>\n                                                    {q.imageUrl && (\n                                                        <div className=\"relative aspect-video w-full rounded-md overflow-hidden\">\n                                                            <Image src={getGoogleDriveImageUrl(q.imageUrl)} alt={`Question ${index+1} image`} fill className=\"object-contain\" />\n                                                        </div>\n                                                    )}\n                                                    {q.videoUrl && (\n                                                        <div className='aspect-video'>\n                                                            <iframe\n                                                                className=\"w-full h-full rounded-md\"\n                                                                src={getYouTubeEmbedUrl(q.videoUrl)}\n                                                                title={`Question ${index+1} video`}\n                                                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                                                allowFullScreen\n                                                            ></iframe>\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            )}\n                                        </div>\n                                        <Separator/>\n                                        <div className='space-y-2'>\n                                            <Label className='text-xs text-muted-foreground'>Candidate&apos;s Answer</Label>\n                                            {q.type === 'puzzle' ? (\n                                                <CodeBlock language={q.language} value={submission.answers[q.id] || ''} readOnly height=\"200px\" />\n                                            ) : (\n                                                <Textarea value={submission.answers[q.id] || ''} readOnly rows={5}/>\n                                            )}\n                                        </div>\n                                         <div className='space-y-2'>\n                                            <Label className='text-xs text-muted-foreground'>Model Answer</Label>\n                                            {q.type === 'puzzle' ? (\n                                                <CodeBlock language={q.language} value={q.answer || ''} readOnly height=\"200px\" />\n                                            ) : (\n                                                <Textarea value={q.answer || ''} readOnly rows={3} className='text-sm bg-muted/50' />\n                                            )}\n                                        </div>\n                                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                                            <div className=\"space-y-2\">\n                                                <Label htmlFor={`score-${q.id}`}>Score Awarded</Label>\n                                                <Input \n                                                    id={`score-${q.id}`} \n                                                    type=\"number\" \n                                                    max={q.marks} \n                                                    min={0}\n                                                    value={evaluations[q.id]?.score ?? ''}\n                                                    onChange={(e) => handleEvaluationChange(q.id, 'score', e.target.value)}\n                                                    placeholder={`Enter score (out of ${q.marks})`}\n                                                />\n                                            </div>\n                                            <div className=\"space-y-2\">\n                                                <Label htmlFor={`feedback-${q.id}`}>Feedback (Optional)</Label>\n                                                <Textarea \n                                                    id={`feedback-${q.id}`} \n                                                    value={evaluations[q.id]?.feedback ?? ''}\n                                                    onChange={(e) => handleEvaluationChange(q.id, 'feedback', e.target.value)}\n                                                    placeholder=\"Provide feedback on the answer...\"\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))}\n                            </CardContent>\n                            <CardFooter>\n                                <Button onClick={handleSaveEvaluation} disabled={isSaving} className='w-full'>\n                                    {isSaving ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : 'Save Final Evaluation'}\n                                </Button>\n                            </CardFooter>\n                        </Card>\n                    )}\n                </main>\n            </div>\n             {/* Hidden div for PDF generation */}\n            <div className=\"absolute -left-[9999px] -top-[9999px]\">\n                <div ref={reportRef}>\n                     <ReportTemplate submission={submission} test={test} candidate={candidate} sectionScores={sectionScoresForPdf} />\n                </div>\n            </div>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}