{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Documents/Final%20Year%20Project/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { analyzeProctoringLogs, type ProctoringLog } from '@/ai/flows/analyze-proctoring-logs';\nimport { evaluateAnswer, type EvaluateAnswerInput } from '@/ai/flows/evaluate-answer';\nimport { generateCompanyMotto } from '@/ai/flows/generate-company-motto';\nimport { parseMcqQuestions, type McqParserInput } from '@/ai/flows/parse-mcq-flow';\nimport { z } from 'zod';\n\nconst proctoringLogSchema = z.object({\n  id: z.string(),\n  candidateId: z.string(),\n  testId: z.string(),\n  timestamp: z.string(),\n  status: z.enum(['present', 'no_face', 'multiple_faces', 'tab_switch']),\n});\n\nconst proctoringLogsSchema = z.array(proctoringLogSchema);\n\n\nexport async function getAnalysis(logs: Omit<ProctoringLog, 'id'>[]) {\n  // Validate input with Zod. This is a good practice for server actions.\n  const logsWithIds = logs.map((log, index) => ({ ...log, id: `log-${index}` }));\n  const validatedLogs = proctoringLogsSchema.safeParse(logsWithIds);\n\n  if (!validatedLogs.success) {\n    return { error: 'Invalid log format.' };\n  }\n\n  try {\n    const analysis = await analyzeProctoringLogs({ logs: validatedLogs.data });\n    return { data: analysis };\n  } catch (error) {\n    console.error('Error analyzing logs:', error);\n    return { error: 'Failed to analyze logs.' };\n  }\n}\n\nconst evaluateAnswerInputSchema = z.object({\n    questionText: z.string(),\n    questionType: z.enum(['mcq', 'coding', 'paragraph', 'image', 'audio']),\n    answer: z.string(),\n    marks: z.number(),\n});\n\nexport async function getAIEvaluation(input: EvaluateAnswerInput) {\n    const validatedInput = evaluateAnswerInputSchema.safeParse(input);\n\n    if (!validatedInput.success) {\n        return { error: 'Invalid input format.' };\n    }\n    \n    try {\n        const evaluation = await evaluateAnswer(validatedInput.data);\n        return { data: evaluation };\n    } catch (error) {\n        console.error('Error getting AI evaluation:', error);\n        return { error: 'Failed to get AI evaluation.' };\n    }\n}\n\nconst companyMottoInputSchema = z.string();\n\nexport async function getCompanyMotto(companyName: string) {\n    const validatedInput = companyMottoInputSchema.safeParse(companyName);\n\n    if (!validatedInput.success) {\n        return { error: 'Invalid input format.' };\n    }\n\n    try {\n        const motto = await generateCompanyMotto(validatedInput.data);\n        return { data: motto };\n    } catch(error) {\n        console.error('Error generating company motto:', error);\n        return { error: 'Failed to generate company motto.' };\n    }\n}\n\nconst bulkQuestionsInputSchema = z.string();\n\nexport async function processBulkQuestions(input: string) {\n  const validatedInput = bulkQuestionsInputSchema.safeParse(input);\n\n  if (!validatedInput.success) {\n    return { error: 'Invalid input format. Expected a raw string.'};\n  }\n\n  try {\n    const result = await parseMcqQuestions(validatedInput.data as McqParserInput);\n    return { data: result };\n  } catch(error) {\n    console.error('Error processing bulk questions:', error);\n    return { error: 'Failed to process questions using AI.'};\n  }\n}\n"],"names":[],"mappings":";;;;;;IAmBsB,cAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Documents/Final%20Year%20Project/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Documents/Final%20Year%20Project/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Documents/Final%20Year%20Project/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Documents/Final%20Year%20Project/src/components/analysis/proctoring-analysis.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useTransition, useEffect } from 'react';\nimport { Bot, User, Clock, AlertTriangle, FileText, Loader2, Sparkles, Link2 } from 'lucide-react';\nimport type { AnalyzeProctoringLogsOutput } from '@/ai/flows/analyze-proctoring-logs';\nimport { getAnalysis } from '@/lib/actions';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Badge } from '@/components/ui/badge';\nimport type { Candidate, Test, ProctoringLog } from '@/lib/types';\nimport { useToast } from '@/hooks/use-toast';\nimport { format } from 'date-fns';\n\ntype ProctoringAnalysisProps = {\n  candidate: Candidate;\n  test: Test;\n  logs: ProctoringLog[];\n};\n\nexport function ProctoringAnalysis({ candidate, test, logs }: ProctoringAnalysisProps) {\n  const [isPending, startTransition] = useTransition();\n  const [analysisResult, setAnalysisResult] = useState<AnalyzeProctoringLogsOutput | null>(null);\n  const { toast } = useToast();\n  const [isClient, setIsClient] = useState(false);\n\n  useEffect(() => {\n    setIsClient(true);\n    // Reset analysis when props change\n    setAnalysisResult(null);\n  }, [candidate, test, logs]);\n\n  const handleAnalysis = () => {\n    startTransition(async () => {\n      const result = await getAnalysis(logs);\n      if (result.error) {\n        toast({\n          variant: 'destructive',\n          title: 'Analysis Failed',\n          description: result.error,\n        });\n        setAnalysisResult(null);\n      } else {\n        setAnalysisResult(result.data!);\n      }\n    });\n  };\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'present':\n        return <Badge variant=\"secondary\">Present</Badge>;\n      case 'no_face':\n        return <Badge variant=\"outline\" className=\"border-accent text-accent-foreground\">No Face</Badge>;\n      case 'multiple_faces':\n        return <Badge variant=\"destructive\">Multiple Faces</Badge>;\n      case 'tab_switch':\n        return <Badge variant=\"destructive\" className=\"bg-yellow-500 text-white\"><Link2 className='w-3 h-3 mr-1'/>Tab Switch</Badge>;\n      default:\n        return <Badge>{status}</Badge>;\n    }\n  };\n\n  return (\n    <div className=\"grid grid-cols-1 gap-8 lg:grid-cols-3\">\n      <div className=\"lg:col-span-1\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Session Details</CardTitle>\n            <CardDescription>Logs for the selected test session.</CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n             <div className=\"flex items-center gap-4\">\n                <User className=\"h-5 w-5 text-muted-foreground\" />\n                <div className=\"flex flex-col\">\n                    <span className=\"text-sm text-muted-foreground\">Candidate</span>\n                    <span className=\"font-medium\">{candidate.name}</span>\n                </div>\n             </div>\n             <div className=\"flex items-center gap-4\">\n                <FileText className=\"h-5 w-5 text-muted-foreground\" />\n                <div className=\"flex flex-col\">\n                    <span className=\"text-sm text-muted-foreground\">Test</span>\n                    <span className=\"font-medium\">{test.title}</span>\n                </div>\n             </div>\n            <Button onClick={handleAnalysis} disabled={isPending || logs.length === 0} className=\"w-full\">\n              {isPending ? (\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n              ) : (\n                <Sparkles className=\"mr-2 h-4 w-4\" />\n              )}\n              Analyze with AI\n            </Button>\n            <ScrollArea className=\"h-96 w-full rounded-md border p-2\">\n              <div className=\"p-2\">\n                <h4 className=\"mb-4 text-sm font-medium leading-none\">Proctoring Logs ({logs.length})</h4>\n                {logs.length > 0 ? logs.map(log => (\n                  <div key={log.id} className=\"mb-2 flex items-center justify-between text-sm\">\n                    <div className=\"flex items-center gap-2\">\n                      <Clock className=\"h-4 w-4 text-muted-foreground\" />\n                      {isClient ? <span>{format(new Date(log.timestamp), 'HH:mm:ss')}</span> : null}\n                    </div>\n                    {getStatusBadge(log.status)}\n                  </div>\n                )) : (\n                  <p className=\"text-center text-sm text-muted-foreground py-16\">No proctoring logs found for this session.</p>\n                )}\n              </div>\n            </ScrollArea>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"lg:col-span-2\">\n        <Card className=\"min-h-full\">\n          <CardHeader>\n            <div className=\"flex items-center gap-2\">\n              <Bot className=\"h-6 w-6 text-primary\" />\n              <div>\n                <CardTitle>AI Analysis Report</CardTitle>\n                <CardDescription>Suspicious activities identified by AI.</CardDescription>\n              </div>\n            </div>\n          </CardHeader>\n          <CardContent>\n            {isPending && (\n              <div className=\"flex h-96 flex-col items-center justify-center gap-4 text-center\">\n                <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n                <p className=\"font-medium\">Analyzing logs...</p>\n                <p className=\"text-sm text-muted-foreground\">The AI is reviewing the session for potential issues. Please wait.</p>\n              </div>\n            )}\n            {!isPending && !analysisResult && (\n              <div className=\"flex h-96 flex-col items-center justify-center gap-4 text-center\">\n                <Sparkles className=\"h-12 w-12 text-muted-foreground\" />\n                <p className=\"font-medium\">Ready to Analyze</p>\n                <p className=\"text-sm text-muted-foreground\">Click the \"Analyze with AI\" button to generate a report.</p>\n              </div>\n            )}\n            {analysisResult && (\n              <div className=\"space-y-6\">\n                <div>\n                  <h3 className=\"mb-2 text-lg font-semibold\">Summary</h3>\n                  <p className=\"text-sm text-muted-foreground\">{analysisResult.summary}</p>\n                </div>\n                <div>\n                  <h3 className=\"mb-4 text-lg font-semibold\">Flagged Activities</h3>\n                  {analysisResult.suspiciousActivities.length > 0 ? (\n                    <div className=\"space-y-4\">\n                      {analysisResult.suspiciousActivities.map((activity, index) => (\n                        <div key={index} className=\"rounded-lg border bg-card p-4\">\n                           <div className=\"flex items-start gap-3\">\n                              <div className=\"mt-1 flex h-6 w-6 flex-shrink-0 items-center justify-center rounded-full bg-destructive/10\">\n                                <AlertTriangle className=\"h-4 w-4 text-destructive\" />\n                              </div>\n                              <div className=\"flex-1\">\n                                <p className=\"font-semibold\">{activity.reason}</p>\n                                <div className=\"mt-2 text-sm text-muted-foreground\">\n                                  <p className=\"font-medium\">Timestamps:</p>\n                                  <div className=\"mt-1 flex flex-wrap gap-2\">\n                                  {activity.timestamps.map((ts, i) => (\n                                    <Badge key={i} variant=\"secondary\">\n                                      {isClient ? format(new Date(ts), 'HH:mm:ss') : ''}\n                                    </Badge>\n                                  ))}\n                                  </div>\n                                </div>\n                              </div>\n                           </div>\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <p className=\"text-sm text-muted-foreground\">No suspicious activities were detected.</p>\n                  )}\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 841, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Documents/Final%20Year%20Project/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mTACA;QAED,GAAG,KAAK;;YAER;0BACD,8OAAC,kKAAA,CAAA,OAAoB;gBAAC,OAAO;0BAC3B,cAAA,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAI7B,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,qCAAuB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,iBAA8B;QAC7B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,gNAAA,CAAA,YAAS;YAAC,WAAU;;;;;;;;;;;AAGzB,qBAAqB,WAAW,GAAG,kKAAA,CAAA,iBAA8B,CAAC,WAAW;AAE7E,MAAM,uCAAyB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,mBAAgC;QAC/B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oNAAA,CAAA,cAAW;YAAC,WAAU;;;;;;;;;;;AAG3B,uBAAuB,WAAW,GAChC,kKAAA,CAAA,mBAAgC,CAAC,WAAW;AAE9C,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACzD,8OAAC,kKAAA,CAAA,SAAsB;kBACrB,cAAA,8OAAC,kKAAA,CAAA,UAAuB;YACtB,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,ucACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,8OAAC;;;;;8BACD,8OAAC,kKAAA,CAAA,WAAwB;oBACvB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,8OAAC;;;;;;;;;;;;;;;;AAIP,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,0CAA0C;QACvD,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,kKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6NACA;QAED,GAAG,KAAK;;0BAET,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC,kKAAA,CAAA,gBAA6B;8BAC5B,cAAA,8OAAC,oMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAIrB,8OAAC,kKAAA,CAAA,WAAwB;0BAAE;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,kKAAA,CAAA,OAAoB,CAAC,WAAW;AAEzD,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,YAAyB;QACxB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG,kKAAA,CAAA,YAAyB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1033, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Documents/Final%20Year%20Project/src/app/%28app%29/dashboard/analysis/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { ProctoringAnalysis } from '@/components/analysis/proctoring-analysis';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { isFirebaseEnabled, db } from '@/lib/firebase';\nimport { collection, onSnapshot, query, where } from 'firebase/firestore';\nimport type { Candidate, Test, Submission, ProctoringLog } from '@/lib/types';\nimport { useSubmissionsStore, useTestsStore, useCandidatesStore } from '@/lib/store';\nimport { Skeleton } from '@/components/ui/skeleton';\n\nexport default function AnalysisPage() {\n    const { tests } = useTestsStore();\n    const { candidates } = useCandidatesStore();\n    const { submissions } = useSubmissionsStore();\n\n    const [selectedTestId, setSelectedTestId] = useState<string | null>(null);\n    const [selectedCandidateId, setSelectedCandidateId] = useState<string | null>(null);\n    const [selectedSubmission, setSelectedSubmission] = useState<Submission | null>(null);\n    const [proctoringLogs, setProctoringLogs] = useState<ProctoringLog[]>([]);\n\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (!isFirebaseEnabled) {\n            if (tests.length > 1) {\n                setSelectedTestId(tests[1]?.id || null);\n            }\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isFirebaseEnabled, tests]);\n\n    useEffect(() => {\n        const submission = submissions.find(s => s.testId === selectedTestId && s.candidateId === selectedCandidateId);\n        setSelectedSubmission(submission || null);\n\n        let logsUnsubscribe: (() => void) | null = null;\n        if (submission) {\n             if (isFirebaseEnabled) {\n                setLoading(true);\n                const logsQuery = query(collection(db, 'proctoringLogs'), \n                    where('candidateId', '==', submission.candidateId), \n                    where('testId', '==', submission.testId)\n                );\n                logsUnsubscribe = onSnapshot(logsQuery, (snapshot) => {\n                    const logsData = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as ProctoringLog));\n                    setProctoringLogs(logsData);\n                    setLoading(false);\n                });\n            } else {\n                const { proctoringLogs: localProctoringLogs } = require('@/lib/data');\n                const logs = localProctoringLogs.filter((l: ProctoringLog) => l.candidateId === submission.candidateId && l.testId === submission.testId);\n                setProctoringLogs(logs);\n                setLoading(false);\n            }\n        } else {\n            setProctoringLogs([]);\n        }\n        \n        return () => {\n            if (logsUnsubscribe) {\n                logsUnsubscribe();\n            }\n        }\n    }, [selectedTestId, selectedCandidateId, submissions]);\n    \n    const candidatesForSelectedTest = candidates.filter(c => \n        submissions.some(s => s.testId === selectedTestId && s.candidateId === c.id)\n    );\n\n    const testToAnalyze = selectedTestId ? tests.find(t => t.id === selectedTestId) : null;\n    const candidateToAnalyze = selectedCandidateId ? candidates.find(c => c.id === selectedCandidateId) : null;\n\n  return (\n    <div className=\"flex flex-col gap-6\">\n        <Card>\n            <CardHeader>\n                <CardTitle>Select a Session to Analyze</CardTitle>\n            </CardHeader>\n            <CardContent className=\"grid md:grid-cols-2 gap-4\">\n                 <div>\n                    <label className=\"text-sm font-medium mb-2 block\">Test</label>\n                    <Select onValueChange={(value) => { setSelectedTestId(value); setSelectedCandidateId(null); }} value={selectedTestId || \"\"}>\n                        <SelectTrigger>\n                            <SelectValue placeholder=\"Select a test...\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                            {tests.length === 0 ? <SelectItem value=\"loading\" disabled>Loading...</SelectItem> : tests.map(test => (\n                                <SelectItem key={test.id} value={test.id}>{test.title}</SelectItem>\n                            ))}\n                        </SelectContent>\n                    </Select>\n                 </div>\n                 <div>\n                     <label className=\"text-sm font-medium mb-2 block\">Candidate</label>\n                    <Select onValueChange={setSelectedCandidateId} value={selectedCandidateId || \"\"} disabled={!selectedTestId}>\n                        <SelectTrigger>\n                            <SelectValue placeholder=\"Select a candidate...\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                            {selectedTestId && candidatesForSelectedTest.length > 0 ? (\n                                candidatesForSelectedTest.map(candidate => (\n                                    <SelectItem key={candidate.id} value={candidate.id}>{candidate.name}</SelectItem>\n                                ))\n                            ) : (\n                                <SelectItem value=\"none\" disabled>No submissions for this test</SelectItem>\n                            )}\n                        </SelectContent>\n                    </Select>\n                 </div>\n            </CardContent>\n        </Card>\n\n      {loading && selectedTestId && (\n        <Card>\n          <CardContent className='pt-6'>\n            <Skeleton className=\"h-96 w-full\" />\n          </CardContent>\n        </Card>\n      )}\n\n      {!loading && testToAnalyze && candidateToAnalyze && selectedSubmission ? (\n        <ProctoringAnalysis \n          candidate={candidateToAnalyze}\n          test={testToAnalyze}\n          logs={proctoringLogs}\n        />\n      ) : !loading && selectedTestId ? (\n        <div className=\"text-center py-12 text-muted-foreground\">\n          <p>Please select a candidate to view the analysis.</p>\n        </div>\n      ) : !loading ? (\n         <div className=\"text-center py-12 text-muted-foreground\">\n          <p>Please select a test to begin.</p>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}