{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/pdf/report-template.tsx"],"sourcesContent":["\nimport { CheckCircle, XCircle } from 'lucide-react';\nimport { Badge } from '@/components/ui/badge';\nimport type { Candidate, Submission, Test } from '@/lib/types';\nimport { format } from 'date-fns';\n\ntype SectionScore = {\n  name: string;\n  scored: number;\n  total: number;\n};\n\ninterface ReportTemplateProps {\n  submission: Submission;\n  test: Test;\n  candidate: Candidate;\n  sectionScores: SectionScore[];\n}\n\nexport function ReportTemplate({ submission, test, candidate, sectionScores }: ReportTemplateProps) {\n  const isShortlisted = submission.result === 'pass';\n  const totalMarks = test.questions.reduce((sum, q) => sum + (q.marks || 0), 0);\n\n  return (\n    <div id=\"pdf-content\" className=\"p-10 bg-white text-black font-sans w-[800px]\">\n      <header className=\"text-center mb-8 border-b-2 border-gray-200 pb-4\">\n        <h1 className={`text-3xl font-bold ${isShortlisted ? 'text-green-600' : 'text-red-600'}`}>\n          {isShortlisted ? '‚úÖ Shortlisted' : '‚ùå Not Shortlisted'}\n        </h1>\n        <p className=\"text-lg text-gray-600\">TechSavvy Solutions</p>\n      </header>\n\n      <main>\n        <div className=\"grid grid-cols-3 gap-4 mb-8 text-sm\">\n          <div>\n            <p className=\"font-semibold text-gray-500\">CANDIDATE NAME</p>\n            <p className=\"text-lg\">{candidate.name}</p>\n          </div>\n          <div>\n            <p className=\"font-semibold text-gray-500\">TEST DATE</p>\n            <p className=\"text-lg\">{format(new Date(submission.submittedAt), 'dd/MM/yyyy')}</p>\n          </div>\n          <div>\n            <p className=\"font-semibold text-gray-500\">JOB ROLE</p>\n            <p className=\"text-lg\">{test.title}</p>\n          </div>\n        </div>\n\n        <div className=\"bg-gray-50 p-6 rounded-lg text-center mb-8\">\n          <p className=\"font-semibold text-gray-500\">FINAL RESULT</p>\n          <div className=\"flex items-center justify-center gap-2 mt-2\">\n            {isShortlisted ? (\n              <CheckCircle className=\"h-8 w-8 text-green-500\" />\n            ) : (\n              <XCircle className=\"h-8 w-8 text-red-500\" />\n            )}\n            <p className=\"text-2xl font-bold\">{isShortlisted ? 'üéâ Shortlisted for Next Round' : 'Not Shortlisted'}</p>\n          </div>\n          <div className=\"mt-2\">\n            <Badge variant={isShortlisted ? 'secondary' : 'destructive'}>\n              Score: {submission.score} / {totalMarks}\n            </Badge>\n          </div>\n        </div>\n\n        <div>\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Section Scores</h2>\n          <div className=\"space-y-4\">\n            {sectionScores.map((section, index) => (\n              <div key={index} className=\"p-4 border rounded-lg\">\n                <div className=\"flex justify-between items-center\">\n                  <p className=\"capitalize font-medium\">{section.name}</p>\n                  <p className=\"font-semibold\">{section.scored} / {section.total}</p>\n                </div>\n                <div className=\"w-full bg-gray-200 rounded-full h-2.5 mt-2\">\n                  <div\n                    className={`h-2.5 rounded-full ${section.scored / section.total >= 0.5 ? 'bg-green-500' : 'bg-red-500'}`}\n                    style={{ width: `${(section.scored / section.total) * 100}%` }}\n                  ></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </main>\n\n      <footer className=\"text-center mt-10 text-gray-500 text-sm\">\n        {isShortlisted ? (\n          <p>üëâ Next Round details will be shared via email.</p>\n        ) : (\n          <p>üëâ Thank you for participating. Better luck next time!</p>\n        )}\n      </footer>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AAEA;;;;;AAeO,SAAS,eAAe,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,EAAE,aAAa,EAAuB;IAChG,MAAM,gBAAgB,WAAW,MAAM,KAAK;IAC5C,MAAM,aAAa,KAAK,SAAS,CAAC,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,CAAC,EAAE,KAAK,IAAI,CAAC,GAAG;IAE3E,qBACE,8OAAC;QAAI,IAAG;QAAc,WAAU;;0BAC9B,8OAAC;gBAAO,WAAU;;kCAChB,8OAAC;wBAAG,WAAW,CAAC,mBAAmB,EAAE,gBAAgB,mBAAmB,gBAAgB;kCACrF,gBAAgB,kBAAkB;;;;;;kCAErC,8OAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;0BAGvC,8OAAC;;kCACC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC;wCAAE,WAAU;kDAA8B;;;;;;kDAC3C,8OAAC;wCAAE,WAAU;kDAAW,UAAU,IAAI;;;;;;;;;;;;0CAExC,8OAAC;;kDACC,8OAAC;wCAAE,WAAU;kDAA8B;;;;;;kDAC3C,8OAAC;wCAAE,WAAU;kDAAW,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,WAAW,WAAW,GAAG;;;;;;;;;;;;0CAEnE,8OAAC;;kDACC,8OAAC;wCAAE,WAAU;kDAA8B;;;;;;kDAC3C,8OAAC;wCAAE,WAAU;kDAAW,KAAK,KAAK;;;;;;;;;;;;;;;;;;kCAItC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;0CAA8B;;;;;;0CAC3C,8OAAC;gCAAI,WAAU;;oCACZ,8BACC,8OAAC,2NAAA,CAAA,cAAW;wCAAC,WAAU;;;;;6DAEvB,8OAAC,4MAAA,CAAA,UAAO;wCAAC,WAAU;;;;;;kDAErB,8OAAC;wCAAE,WAAU;kDAAsB,gBAAgB,kCAAkC;;;;;;;;;;;;0CAEvF,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,iIAAA,CAAA,QAAK;oCAAC,SAAS,gBAAgB,cAAc;;wCAAe;wCACnD,WAAW,KAAK;wCAAC;wCAAI;;;;;;;;;;;;;;;;;;kCAKnC,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAA2C;;;;;;0CACzD,8OAAC;gCAAI,WAAU;0CACZ,cAAc,GAAG,CAAC,CAAC,SAAS,sBAC3B,8OAAC;wCAAgB,WAAU;;0DACzB,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAE,WAAU;kEAA0B,QAAQ,IAAI;;;;;;kEACnD,8OAAC;wDAAE,WAAU;;4DAAiB,QAAQ,MAAM;4DAAC;4DAAI,QAAQ,KAAK;;;;;;;;;;;;;0DAEhE,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC;oDACC,WAAW,CAAC,mBAAmB,EAAE,QAAQ,MAAM,GAAG,QAAQ,KAAK,IAAI,MAAM,iBAAiB,cAAc;oDACxG,OAAO;wDAAE,OAAO,GAAG,AAAC,QAAQ,MAAM,GAAG,QAAQ,KAAK,GAAI,IAAI,CAAC,CAAC;oDAAC;;;;;;;;;;;;uCARzD;;;;;;;;;;;;;;;;;;;;;;0BAiBlB,8OAAC;gBAAO,WAAU;0BACf,8BACC,8OAAC;8BAAE;;;;;yCAEH,8OAAC;8BAAE;;;;;;;;;;;;;;;;;AAKb","debugId":null}},
    {"offset": {"line": 488, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28evaluator%29/evaluator/submission/%5BsubmissionId%5D/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { useParams, useRouter } from 'next/navigation';\nimport { useTestsStore, useSubmissionsStore, useCandidatesStore } from '@/lib/store';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { ArrowLeft, CheckCircle, Clock, Download, Eye, Send, User, Loader2 } from 'lucide-react';\nimport { Separator } from '@/components/ui/separator';\nimport { Badge } from '@/components/ui/badge';\nimport type { Question, Submission, Test, Candidate } from '@/lib/types';\nimport { useToast } from '@/hooks/use-toast';\nimport { isFirebaseEnabled, db } from '@/lib/firebase';\nimport { doc, getDoc, collection, getDocs } from 'firebase/firestore';\nimport { ResponsiveContainer, PieChart, Pie, Cell, BarChart, Bar, XAxis, YAxis, Tooltip } from 'recharts';\nimport { Progress } from '@/components/ui/progress';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { ReportTemplate } from '@/components/pdf/report-template';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\n\nexport default function EvaluationPage() {\n    const router = useRouter();\n    const params = useParams();\n    const { toast } = useToast();\n    \n    const { tests: localTests } = useTestsStore();\n    const { submissions: localSubmissions } = useSubmissionsStore();\n    const { candidates: localCandidates } = useCandidatesStore();\n\n    const [loading, setLoading] = useState(true);\n    const [isDownloading, setIsDownloading] = useState(false);\n\n    const [submission, setSubmission] = useState<Submission | null>(null);\n    const [test, setTest] = useState<Test | null>(null);\n    const [candidate, setCandidate] = useState<Candidate | null>(null);\n\n    const submissionId = params.submissionId as string;\n    const reportRef = useRef<HTMLDivElement>(null);\n    \n    useEffect(() => {\n      async function fetchData() {\n        if (!submissionId) return;\n\n        setLoading(true);\n\n        try {\n          let subData: Submission | null = null;\n          let testData: Test | null = null;\n          let candidateData: Candidate | null = null;\n\n          if (isFirebaseEnabled) {\n              const submissionRef = doc(db, 'submissions', submissionId);\n              const submissionSnap = await getDoc(submissionRef);\n\n              if (!submissionSnap.exists()) throw new Error(\"Submission not found\");\n              subData = { id: submissionSnap.id, ...submissionSnap.data() } as Submission;\n              \n              const testRef = doc(db, 'tests', subData.testId);\n              const testSnap = await getDoc(testRef);\n              if (!testSnap.exists()) throw new Error(\"Test not found\");\n              \n              testData = { id: testSnap.id, ...testSnap.data() } as Test;\n\n              const questionsRef = collection(db, 'tests', subData.testId, 'questions');\n              const questionsSnap = await getDocs(questionsRef);\n              testData.questions = questionsSnap.docs.map(d => ({ id: d.id, ...d.data() }) as Question);\n\n              const candidateRef = doc(db, 'candidates', subData.candidateId);\n              const candidateSnap = await getDoc(candidateRef);\n              if (!candidateSnap.exists()) throw new Error(\"Candidate not found\");\n              candidateData = { id: candidateSnap.id, ...candidateSnap.data() } as Candidate;\n          } else {\n              subData = localSubmissions.find(s => s.id === submissionId) || null;\n              if (subData) {\n                  testData = localTests.find(t => t.id === subData.testId) || null;\n                  candidateData = localCandidates.find(c => c.id === subData.candidateId) || null;\n              }\n          }\n\n          setSubmission(subData);\n          setTest(testData);\n          setCandidate(candidateData);\n          \n        } catch (error: any) {\n            toast({ variant: 'destructive', title: 'Error loading data', description: error.message });\n            router.back();\n        }\n        setLoading(false);\n      }\n      fetchData();\n    }, [submissionId, router, toast, localSubmissions, localTests, localCandidates]);\n\n    const formatTime = (totalSeconds: number) => {\n        const hours = Math.floor(totalSeconds / 3600).toString().padStart(2, '0');\n        const minutes = Math.floor((totalSeconds % 3600) / 60).toString().padStart(2, '0');\n        const seconds = (totalSeconds % 60).toString().padStart(2, '0');\n        return `${hours}:${minutes}:${seconds}`;\n    };\n\n    const handleDownload = async () => {\n        if (!reportRef.current || !candidate) return;\n        setIsDownloading(true);\n        try {\n            const canvas = await html2canvas(reportRef.current, {\n                scale: 2,\n                useCORS: true,\n                backgroundColor: null,\n            });\n            const imgData = canvas.toDataURL('image/png');\n            const pdf = new jsPDF('p', 'mm', 'a4');\n            const pdfWidth = pdf.internal.pageSize.getWidth();\n            const pdfHeight = pdf.internal.pageSize.getHeight();\n            const canvasWidth = canvas.width;\n            const canvasHeight = canvas.height;\n            const ratio = canvasWidth / canvasHeight;\n            const width = pdfWidth;\n            const height = width / ratio;\n\n            let finalHeight = height;\n            if (height > pdfHeight) {\n                finalHeight = pdfHeight;\n            }\n\n            pdf.addImage(imgData, 'PNG', 0, 0, width, finalHeight);\n            pdf.save(`${candidate.name}-Result.pdf`);\n\n        } catch (error) {\n            console.error(error);\n            toast({\n                variant: 'destructive',\n                title: 'Download Failed',\n                description: 'Could not generate the PDF report.'\n            })\n        } finally {\n            setIsDownloading(false);\n        }\n    };\n\n\n    if (loading) {\n        return (\n             <div className=\"space-y-6\">\n                <Skeleton className='h-10 w-32' />\n                <Card>\n                    <CardHeader>\n                        <Skeleton className='h-8 w-1/2' />\n                        <Skeleton className='h-4 w-3/4' />\n                    </CardHeader>\n                    <CardContent>\n                        <Skeleton className='h-48 w-full' />\n                    </CardContent>\n                </Card>\n             </div>\n        )\n    }\n\n    if (!test || !submission || !candidate) {\n        return (\n             <div className=\"flex flex-col items-center justify-center h-full text-center\">\n                <CardTitle>Submission not found</CardTitle>\n                <CardDescription>This submission could not be found.</CardDescription>\n                <Button onClick={() => router.back()} variant=\"link\" className=\"mt-4\">Go Back</Button>\n            </div>\n        );\n    }\n    \n    const totalMarks = test.questions.reduce((sum, q) => sum + (q.marks || 0), 0);\n    const scorePercentage = totalMarks > 0 && submission.score !== null ? Math.round((submission.score / totalMarks) * 100) : 0;\n    const timeTaken = submission.timeTaken || 0;\n    const timeLimitInSeconds = test.timeLimit * 60;\n    const resultText = submission.result === 'pass' ? 'Passed' : 'Failed';\n\n    const getGradeDetails = (percentage: number) => {\n        if (percentage >= 90) return { grade: 'Excellent', description: 'Outstanding performance. Keep up the great work!' };\n        if (percentage >= 75) return { grade: 'Good', description: 'Solid performance with a good understanding of the topics.' };\n        if (percentage >= 60) return { grade: 'Satisfactory', description: 'Passed the assessment, but there are areas for improvement.' };\n        return { grade: 'Needs Improvement', description: 'Did not meet the passing criteria. Further review is recommended.' };\n    }\n    \n    const { grade, description: gradeDescription } = getGradeDetails(scorePercentage);\n\n    const scoreData = [\n        { name: 'Score', value: scorePercentage },\n        { name: 'Remaining', value: 100 - scorePercentage },\n    ];\n    \n    const categoryScores = test.questions.reduce((acc, question) => {\n        const category = question.category || 'general';\n        if (!acc[category]) {\n            acc[category] = { total: 0, scored: 0 };\n        }\n        acc[category].total += question.marks || 0;\n        \n        const answer = submission.answers[question.id];\n        if (q.type === 'mcq' || q.type === 'image-mcq' || q.type === 'video-mcq') {\n             if (answer && answer === question.answer) {\n                acc[category].scored += question.marks || 0;\n            }\n        } else if (submission.evaluations?.[question.id]?.score) {\n             acc[category].scored += submission.evaluations[question.id].score!;\n        }\n\n        return acc;\n    }, {} as Record<string, { total: number, scored: number }>);\n    \n    const chartData = Object.entries(categoryScores).map(([name, data], index) => ({\n        name: name.charAt(0).toUpperCase() + name.slice(1),\n        score: data.total > 0 ? Math.round((data.scored / data.total) * 100) : 0,\n        fill: `hsl(var(--chart-${(index % 5) + 1}))`,\n    }));\n    \n    const sectionScoresForPdf = Object.entries(categoryScores).map(([name, data]) => ({\n        name: name.charAt(0).toUpperCase() + name.slice(1),\n        scored: data.scored,\n        total: data.total\n    }));\n\n    return (\n        <div className=\"space-y-6\">\n             <div className='flex justify-between items-center'>\n                <h1 className='text-2xl font-semibold'>Skills and knowledge assessment</h1>\n                <Button variant=\"outline\" onClick={() => router.back()}>\n                    <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                    Back to Submissions\n                </Button>\n            </div>\n            \n            <div className='grid grid-cols-1 lg:grid-cols-3 gap-6'>\n                <aside className='lg:col-span-1 space-y-6'>\n                     <Card>\n                        <CardHeader>\n                             <Badge className='bg-green-100 text-green-800 w-fit'>ACTIVE</Badge>\n                             <CardTitle className='pt-2'>Test configuration</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                            <div className='space-y-2'>\n                                <div className='flex justify-between items-center text-sm'>\n                                    <span className='font-medium'>100% completed</span>\n                                </div>\n                                <Progress value={100} />\n                            </div>\n                        </CardContent>\n                    </Card>\n                    <Card>\n                        <CardHeader>\n                            <CardTitle>Test progress & results</CardTitle>\n                        </CardHeader>\n                        <CardContent className='space-y-1'>\n                            <Button variant='ghost' className='w-full justify-start text-muted-foreground'>\n                                <User className='mr-2' /> Respondent\n                            </Button>\n                            <Button variant='ghost' className='w-full justify-start text-muted-foreground'>\n                                <Clock className='mr-2' /> Timer\n                            </Button>\n                             <Button variant='secondary' className='w-full justify-start font-semibold'>\n                                <CheckCircle className='mr-2' /> Test sheets review\n                            </Button>\n                        </CardContent>\n                        <CardFooter>\n                            <Button className='w-full' variant='destructive'>End test</Button>\n                        </CardFooter>\n                    </Card>\n                </aside>\n\n                <main className='lg:col-span-2 space-y-6'>\n                    <Card>\n                        <CardHeader>\n                           <div className='flex justify-between items-center'>\n                             <h2 className='text-xl font-semibold'>Test sheets review</h2>\n                             <div className='flex items-center gap-2'>\n                                <span className='text-sm text-muted-foreground'>Respondent</span>\n                                <Badge variant='outline'>{candidate.name}</Badge>\n                             </div>\n                           </div>\n                           <Separator/>\n                           <div className='flex justify-end items-center gap-2 pt-2'>\n                                <Button variant='outline' size='sm' onClick={() => router.push(`/test/${candidate.id}/${test.id}`)}><Eye className='mr-2'/>Respondent view</Button>\n                                <Button variant='outline' size='sm' onClick={handleDownload} disabled={isDownloading}>\n                                    {isDownloading ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Download className='mr-2' />}\n                                    Download\n                                </Button>\n                                <Button variant='outline' size='sm'><Send className='mr-2'/>Send</Button>\n                           </div>\n                        </CardHeader>\n                        <CardContent className='space-y-4'>\n                            <h3 className='font-semibold'>RESPONDENT</h3>\n                            <div className='flex items-center gap-4'>\n                                <div className='flex h-10 w-10 items-center justify-center rounded-full bg-muted'>\n                                    <User className='h-6 w-6 text-muted-foreground'/>\n                                </div>\n                                <div>\n                                    <p className='font-bold text-lg'>{candidate.name}</p>\n                                    <p className='text-sm text-muted-foreground'>{candidate.email}</p>\n                                </div>\n                            </div>\n                            <div className='flex items-center gap-2 text-sm'>\n                                <CheckCircle className='h-5 w-5 text-green-600'/>\n                                <span className='font-medium'>Consent on start page</span>\n                                <span className='text-muted-foreground'>I agree with the Terms and Conditions...</span>\n                            </div>\n                        </CardContent>\n                    </Card>\n\n                     <div className='grid grid-cols-1 md:grid-cols-2 gap-6'>\n                        <Card>\n                            <CardHeader>\n                                <CardTitle className='text-base'>RESULT</CardTitle>\n                            </CardHeader>\n                            <CardContent className='flex items-center gap-6'>\n                                <div className='relative w-32 h-32'>\n                                    <ResponsiveContainer width=\"100%\" height=\"100%\">\n                                        <PieChart>\n                                            <Pie \n                                                data={scoreData} \n                                                cx=\"50%\" \n                                                cy=\"50%\" \n                                                innerRadius={40} \n                                                outerRadius={50} \n                                                startAngle={90}\n                                                endAngle={-270}\n                                                paddingAngle={0}\n                                                dataKey=\"value\"\n                                            >\n                                                <Cell fill=\"hsl(var(--primary))\" stroke=\"hsl(var(--primary))\" />\n                                                <Cell fill=\"hsl(var(--muted))\" stroke=\"hsl(var(--muted))\" />\n                                            </Pie>\n                                        </PieChart>\n                                    </ResponsiveContainer>\n                                    <div className='absolute inset-0 flex items-center justify-center'>\n                                        <span className='text-3xl font-bold'>{scorePercentage}%</span>\n                                    </div>\n                                </div>\n                                <div className='space-y-1'>\n                                    <p className={`font-bold text-lg ${resultText === 'Passed' ? 'text-primary' : 'text-destructive'}`}>\n                                        Test {resultText}\n                                    </p>\n                                    <p className='text-sm'><span className='text-muted-foreground'>Grade:</span> {grade}</p>\n                                    <p className='text-sm'><span className='text-muted-foreground'>Descriptive grade:</span> {gradeDescription}</p>\n                                </div>\n                            </CardContent>\n                        </Card>\n                        <Card>\n                            <CardHeader>\n                                <CardTitle className='text-base flex items-center gap-2'><Clock/>TIMER</CardTitle>\n                            </CardHeader>\n                            <CardContent>\n                                <p className='text-muted-foreground text-sm'>Total time</p>\n                                <p className='text-2xl font-bold'>{formatTime(timeTaken)} / {formatTime(timeLimitInSeconds)}</p>\n                                <Progress value={(timeTaken/timeLimitInSeconds) * 100} className='mt-2 h-2'/>\n                                <div className='flex justify-between text-sm text-muted-foreground mt-1'>\n                                    <span>Start time: 10:15</span>\n                                    <span>End time: 10:47</span>\n                                </div>\n                            </CardContent>\n                        </Card>\n                     </div>\n\n                    <Card>\n                        <CardHeader>\n                            <CardTitle className='text-base'>SCORE PER CATEGORY</CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"h-64\">\n                            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                                <BarChart data={chartData} layout=\"vertical\" margin={{ left: 50, right: 10 }}>\n                                    <XAxis type=\"number\" hide />\n                                    <YAxis \n                                        dataKey=\"name\" \n                                        type=\"category\" \n                                        axisLine={false} \n                                        tickLine={false}\n                                        tick={{ fontSize: 12, fill: 'hsl(var(--muted-foreground))' }}\n                                        width={100}\n                                        style={{ textAnchor: 'start' }}\n                                    />\n                                    <Tooltip \n                                        cursor={{ fill: 'hsl(var(--muted))' }}\n                                        contentStyle={{\n                                            backgroundColor: 'hsl(var(--background))',\n                                            borderColor: 'hsl(var(--border))',\n                                            borderRadius: 'var(--radius)'\n                                        }}\n                                        labelStyle={{ color: 'hsl(var(--foreground))' }}\n                                    />\n                                    <Bar dataKey=\"score\" radius={[4, 4, 4, 4]} />\n                                </BarChart>\n                            </ResponsiveContainer>\n                        </CardContent>\n                    </Card>\n                </main>\n            </div>\n             {/* Hidden div for PDF generation */}\n            <div className=\"absolute -left-[9999px] -top-[9999px]\">\n                <div ref={reportRef}>\n                     <ReportTemplate submission={submission} test={test} candidate={candidate} sectionScores={sectionScoresForPdf} />\n                </div>\n            </div>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}